{"config":{"lang":["pt"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"primeiros-passos/","title":"Primeiros Passos","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"primeiros-passos/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"primeiros-passos/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"primeiros-passos/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"primeiros-passos/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"primeiros-passos/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"primeiros-passos/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"primeiros-passos/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"deeplink/","title":"Integra\u00e7\u00e3o Deeplink SDK \u00danico","text":""},{"location":"deeplink/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O PaykitDeeplink \u00e9 uma interface que permite a integra\u00e7\u00e3o e comunica\u00e7\u00e3o com o SDK Unico para processamento de pagamentos atrav\u00e9s de deeplinks. Esta documenta\u00e7\u00e3o detalha as rotas dispon\u00edveis e os par\u00e2metros aceitos para cada m\u00e9todo de pagamento.</p>"},{"location":"deeplink/#rota-base","title":"Rota Base","text":"<p>Para chamar o PaykitDeeplink, a aplica\u00e7\u00e3o deve utilizar o seguinte formato de URL:</p> <pre><code>paykit://payment\n</code></pre>"},{"location":"deeplink/#tipos-de-operacoes","title":"Tipos de Opera\u00e7\u00f5es","text":"<p>O par\u00e2metro <code>paymentType</code> determina qual tipo de opera\u00e7\u00e3o ser\u00e1 executada. As opera\u00e7\u00f5es dispon\u00edveis s\u00e3o:</p> <ol> <li>activate - Ativa o terminal. Executar apenas 1 (uma) vez ou quando o terminal \u00e9 realocado para outra loja</li> <li>credit - Realiza pagamento com cart\u00e3o de cr\u00e9dito  </li> <li>debit - Realiza pagamento com cart\u00e3o de d\u00e9bito  </li> <li>voucher - Realiza pagamento com voucher/vale  </li> <li>fleet - Realiza pagamento com cart\u00e3o de frota  </li> <li>pix - Realiza pagamento via PIX  </li> <li>wallet - Realiza pagamento via carteira digital  </li> <li>qrcode - Realiza pagamento via QR Code  </li> <li>confirm - Confirma uma transa\u00e7\u00e3o pendente  </li> <li>undo - Desfaz uma transa\u00e7\u00e3o pendente  </li> <li>print_last_receipt - Imprime o \u00faltimo recibo  </li> <li>get_transaction - Consulta detalhes de uma transa\u00e7\u00e3o  </li> <li>cancel - Cancela uma transa\u00e7\u00e3o  </li> <li>cancel_interactive - Realiza cancelamento interativo  </li> <li>print - Imprime uma imagem  </li> <li>query_report - Consulta relat\u00f3rios</li> </ol>"},{"location":"deeplink/#parametros-por-metodo-de-pagamento","title":"Par\u00e2metros por M\u00e9todo de Pagamento","text":""},{"location":"deeplink/#1-ativacao","title":"1. Ativa\u00e7\u00e3o","text":"<pre><code>paykit://payment?paymentType=activate\n</code></pre> <p>*Executar apenas 1 (uma) vez ou quando o terminal \u00e9 realocado para outra loja.</p> <p>Par\u00e2metros:</p> <ul> <li><code>activationCode</code>: C\u00f3digo de ativa\u00e7\u00e3o fornecido pelo provedor de pagamento</li> <li><code>storeCnpj</code>: CNPJ do estabelecimento comercial (sem m\u00e1scara)</li> <li><code>automationCnpj</code>: CNPJ da automa\u00e7\u00e3o (sem m\u00e1scara)</li> <li><code>isProduction</code>: Indicador de ambiente de produ\u00e7\u00e3o (true/false)</li> <li><code>host</code>: Host para configura\u00e7\u00e3o do provedor de pagamento (opcional, IP ou URL)</li> <li><code>token</code>: Token de autentica\u00e7\u00e3o no provedor de pagamento (opcional)</li> </ul>"},{"location":"deeplink/#2-pagamento-com-cartao-de-credito-credit","title":"2. Pagamento com Cart\u00e3o de Cr\u00e9dito (credit)","text":"<pre><code>paykit://payment?paymentType=credit\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>installments</code>: N\u00famero de parcelas (opcional)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>cpf</code>: CPF do cliente (opcional, sem m\u00e1scara)</li> <li><code>transactionType</code>: Tipo de transa\u00e7\u00e3o de cr\u00e9dito (at_sight, installments, store_installments, etc.)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#3-pagamento-com-cartao-de-debito-debit","title":"3. Pagamento com Cart\u00e3o de D\u00e9bito (debit)","text":"<pre><code>paykit://payment?paymentType=debit\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>installments</code>: N\u00famero de parcelas (opcional)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>cpf</code>: CPF do cliente (opcional, sem m\u00e1scara)</li> <li><code>postCreditDays</code>: Dias para p\u00f3s-datamento (opcional)</li> <li><code>transactionType</code>: Tipo de transa\u00e7\u00e3o de d\u00e9bito (at_sight, acquirer_at_sight, etc.)</li> <li><code>downpaymentAmount</code>: Valor de entrada (opcional)</li> <li><code>firstInstallmentAmount</code>: Valor da primeira parcela (opcional)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#4-pagamento-com-voucher-voucher","title":"4. Pagamento com Voucher (voucher)","text":"<pre><code>paykit://payment?paymentType=voucher\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>cpf</code>: CPF do cliente (opcional, sem m\u00e1scara)</li> <li><code>transactionType</code>: Tipo de voucher (food, meal, automotive, culture, benefits, etc.)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#5-pagamento-com-cartao-de-frota-fleet","title":"5. Pagamento com Cart\u00e3o de Frota (fleet)","text":"<pre><code>paykit://payment?paymentType=fleet\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>cpf</code>: CPF do cliente (opcional, sem m\u00e1scara)</li> <li><code>providerParams</code>: Par\u00e2metros espec\u00edficos do provedor (JSON codificado para URL)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#6-pagamento-via-pix-pix","title":"6. Pagamento via PIX (pix)","text":"<pre><code>paykit://payment?paymentType=pix\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>providerParams</code>: Par\u00e2metros espec\u00edficos do provedor (JSON codificado para URL)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#7-pagamento-via-carteira-digital-wallet","title":"7. Pagamento via Carteira Digital (wallet)","text":"<pre><code>paykit://payment?paymentType=wallet\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>providerParams</code>: Par\u00e2metros espec\u00edficos do provedor (JSON codificado para URL)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#8-pagamento-via-qr-code-qrcode","title":"8. Pagamento via QR Code (qrcode)","text":"<pre><code>paykit://payment?paymentType=qrcode\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>billOfSale</code>: Refer\u00eancia do pedido/venda</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>providerParams</code>: Par\u00e2metros espec\u00edficos do provedor (JSON codificado para URL)</li> <li><code>orderItems</code>: Lista de itens do pedido (opcional, formato JSON ou delimitado)</li> </ul>"},{"location":"deeplink/#9-confirmacao-de-transacao-pendente-confirm","title":"9. Confirma\u00e7\u00e3o de Transa\u00e7\u00e3o Pendente (confirm)","text":"<pre><code>paykit://payment?paymentType=confirm\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>transactionId</code>: ID da transa\u00e7\u00e3o a ser confirmada</li> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>finalizeTransaction</code>: Indicador para finalizar a transa\u00e7\u00e3o (true/false)</li> </ul>"},{"location":"deeplink/#10-desfazer-transacao-pendente-undo","title":"10. Desfazer Transa\u00e7\u00e3o Pendente (undo)","text":"<pre><code>paykit://payment?paymentType=undo\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>transactionId</code>: ID da transa\u00e7\u00e3o a ser desfeita</li> <li><code>amount</code>: Valor da transa\u00e7\u00e3o (pode ser informado como valor inteiro em centavos, ex: \"1000\" para   R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>finalizeTransaction</code>: Indicador para finalizar a transa\u00e7\u00e3o (true/false)</li> </ul>"},{"location":"deeplink/#11-imprimir-ultimo-recibo-print_last_receipt","title":"11. Imprimir \u00daltimo Recibo (print_last_receipt)","text":"<pre><code>paykit://payment?paymentType=print_last_receipt\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>receiptType</code>: Tipo de recibo a ser impresso (merchant, customer, both)</li> </ul>"},{"location":"deeplink/#12-consulta-de-transacao-get_transaction","title":"12. Consulta de Transa\u00e7\u00e3o (get_transaction)","text":"<pre><code>paykit://payment?paymentType=get_transaction\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>transactionId</code>: ID da transa\u00e7\u00e3o a ser consultada</li> <li><code>externalId</code>: ID externo da transa\u00e7\u00e3o (opcional)</li> </ul>"},{"location":"deeplink/#13-cancelar-transacao-cancel","title":"13. Cancelar Transa\u00e7\u00e3o (cancel)","text":"<pre><code>paykit://payment?paymentType=cancel\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>transactionId</code>: ID da transa\u00e7\u00e3o (paymentId)</li> <li><code>amount</code>: Valor a ser cancelado (pode ser informado como valor inteiro em centavos, ex: \"1000\"   para R$ 10,00, ou como valor decimal com ponto, ex: \"10.25\" para R$ 10,25)</li> <li><code>autoPrintReceipt</code>: Indicador para imprimir recibo (true/false)</li> <li><code>printMerchantReceipt</code>: Indicador para imprimir recibo do lojista (true/false)</li> <li><code>autoConfirm</code>: Indicador para confirma\u00e7\u00e3o autom\u00e1tica (true/false)</li> <li><code>externalId</code>: ID externo para identifica\u00e7\u00e3o da transa\u00e7\u00e3o</li> <li><code>dateTimeOfSale</code>: Data/hora da venda original (timestamp em milissegundos)</li> </ul>"},{"location":"deeplink/#14-cancelamento-interativo-cancel_interactive","title":"14. Cancelamento Interativo (cancel_interactive)","text":"<pre><code>paykit://payment?paymentType=cancel_interactive\n</code></pre> <p>N\u00e3o requer par\u00e2metros adicionais, inicia a interface de cancelamento interativo.</p>"},{"location":"deeplink/#15-impressao-print","title":"15. Impress\u00e3o (print)","text":"<pre><code>paykit://payment?paymentType=print\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>bitmap</code>: Imagem a ser impressa (codificada em base64)</li> </ul> <p>Observa\u00e7\u00f5es sobre o par\u00e2metro bitmap:</p> <p>A imagem para impress\u00e3o deve ser enviada como uma string codificada em base64. O sistema processa o par\u00e2metro <code>bitmap</code> da seguinte forma:</p> <ol> <li>Extrai o valor do par\u00e2metro <code>bitmap</code> da URL ou dos extras do Intent</li> <li>Decodifica a string base64 para um array de bytes usando <code>Base64.decode()</code></li> <li>Converte o array de bytes para um objeto Bitmap usando <code>BitmapFactory.decodeByteArray()</code></li> </ol> <p>Limita\u00e7\u00f5es importantes:</p> <ul> <li>Os deeplinks t\u00eam um limite de tamanho de aproximadamente 2000 caracteres em muitos navegadores e sistemas</li> <li>Considerando a codifica\u00e7\u00e3o base64 (que aumenta o tamanho em aproximadamente 33%), recomenda-se que a imagem original n\u00e3o ultrapasse 1.5 MB</li> <li>Intents do Android tamb\u00e9m t\u00eam um limite de aproximadamente 500KB para extras, portanto \u00e9 necess\u00e1rio comprimir adequadamente as imagens</li> <li>A impressora t\u00e9rmica do terminal tem uma largura limitada (geralmente 384 pixels), ent\u00e3o imagens muito grandes ser\u00e3o redimensionadas</li> </ul> <p>Exemplo de codifica\u00e7\u00e3o:</p> <pre><code>// Converte um bitmap para string base64\nfun bitmapToBase64(bitmap: Bitmap): String {\n    val byteArrayOutputStream = ByteArrayOutputStream()\n    // Use PNG para imagens com transpar\u00eancia ou JPEG para fotos\n    // O \u00faltimo par\u00e2metro (0-100) define a qualidade da compress\u00e3o para JPEG\n    bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream)\n    val byteArray = byteArrayOutputStream.toByteArray()\n    return Base64.encodeToString(byteArray, Base64.DEFAULT)\n}\n\n// Opcionalmente, redimensione a imagem antes da codifica\u00e7\u00e3o\nfun resizeBitmap(originalBitmap: Bitmap, maxWidthInPixels: Int = 384): Bitmap {\n    if (originalBitmap.width &lt;= maxWidthInPixels) return originalBitmap\n\n    val ratio = maxWidthInPixels.toFloat() / originalBitmap.width\n    val newHeight = (originalBitmap.height * ratio).toInt()\n\n    return Bitmap.createScaledBitmap(\n        originalBitmap,\n        maxWidthInPixels,\n        newHeight, \n        true\n    )\n}\n\n// Uso no deeplink\nval resizedBitmap = resizeBitmap(myBitmap)\nval base64Image = bitmapToBase64(resizedBitmap)\nval uri = Uri.parse(\"paykit://payment\")\n    .buildUpon()\n    .appendQueryParameter(\"paymentType\", \"print\")\n    .appendQueryParameter(\"bitmap\", base64Image)\n    .build()\n</code></pre> <p>Recomenda\u00e7\u00f5es:</p> <ul> <li>Use um formato de imagem compacto (como PNG) antes da codifica\u00e7\u00e3o em base64</li> <li>Redimensione a imagem para a largura da impressora (geralmente 384 pixels)</li> <li>Converta imagens coloridas para escala de cinza quando poss\u00edvel para melhorar a impress\u00e3o t\u00e9rmica</li> <li>Teste a impress\u00e3o com diferentes resolu\u00e7\u00f5es para garantir compatibilidade com a impressora do terminal</li> <li>Para imagens maiores, considere usar o m\u00e9todo de Intent com extras em vez de deeplink na URL</li> </ul>"},{"location":"deeplink/#16-consulta-de-relatorios-query_report","title":"16. Consulta de Relat\u00f3rios (query_report)","text":"<pre><code>paykit://payment?paymentType=query_report\n</code></pre> <p>Par\u00e2metros:</p> <ul> <li><code>providerParams</code>: Par\u00e2metros espec\u00edficos do provedor para consulta (JSON codificado para URL)</li> </ul>"},{"location":"deeplink/#tipos-de-transacao","title":"Tipos de Transa\u00e7\u00e3o","text":"<p>O par\u00e2metro <code>transactionType</code> pode variar de acordo com o m\u00e9todo de pagamento. Valores poss\u00edveis:</p>"},{"location":"deeplink/#para-cartao-de-credito","title":"Para Cart\u00e3o de Cr\u00e9dito","text":"<ul> <li><code>at_sight</code>: \u00c0 vista</li> <li><code>installments</code>: Parcelado gen\u00e9rico</li> <li><code>store_installments</code>: Parcelado loja</li> <li><code>admin_installments</code>: Parcelado administradora</li> <li><code>bank_installments</code>: Parcelado banco</li> <li><code>issuer_installments</code>: Parcelado emissor</li> <li><code>pre_authorization</code>: Pr\u00e9-autoriza\u00e7\u00e3o</li> <li><code>financing</code>: Financiamento</li> <li><code>credit_1_minute</code>: Cr\u00e9dito em 1 minuto</li> </ul>"},{"location":"deeplink/#para-cartao-de-debito","title":"Para Cart\u00e3o de D\u00e9bito","text":"<ul> <li><code>at_sight</code>: \u00c0 vista</li> <li><code>acquirer_at_sight</code>: \u00c0 vista pela adquirente</li> <li><code>with_instalments</code>: Com parcelamento</li> <li><code>invoice_payment</code>: Pagamento de fatura</li> <li><code>postdated</code>: P\u00f3s-datado</li> </ul>"},{"location":"deeplink/#para-voucher","title":"Para Voucher","text":"<ul> <li><code>food</code>: Alimenta\u00e7\u00e3o</li> <li><code>meal</code>: Refei\u00e7\u00e3o</li> <li><code>automotive</code>: Automotivo</li> <li><code>culture</code>: Cultura</li> <li><code>toll</code>: Ped\u00e1gio</li> <li><code>benefits</code>: Benef\u00edcios</li> <li><code>automobile</code>: Autom\u00f3vel</li> </ul>"},{"location":"deeplink/#formato-dos-itens-do-pedido-orderitems","title":"Formato dos Itens do Pedido (OrderItems)","text":"<p>O par\u00e2metro <code>orderItems</code> pode ser informado em dois formatos:</p>"},{"location":"deeplink/#formato-json","title":"Formato JSON","text":"<pre><code>[\n  {\n    \"sku\": \"123\",\n    \"name\": \"Produto 1\",\n    \"value\": 1000,\n    \"quantity\": 1,\n    \"unityOfMeasure\": \"UN\"\n  },\n  {\n    \"sku\": \"456\",\n    \"name\": \"Produto 2\",\n    \"value\": 2000,\n    \"quantity\": 2,\n    \"unityOfMeasure\": \"UN\"\n  }\n]\n</code></pre> <p>Importante: O JSON deve ser codificado para URL. Exemplo:</p> <pre><code>orderItems=%5B%7B%22sku%22%3A%22123%22%2C%22name%22%3A%22Produto%201%22%2C%22value%22%3A1000%2C%22quantity%22%3A1%2C%22unityOfMeasure%22%3A%22UN%22%7D%5D\n</code></pre>"},{"location":"deeplink/#formato-delimitado","title":"Formato Delimitado","text":"<pre><code>123|Produto 1|1000|1|UN;456|Produto 2|2000|2|UN\n</code></pre> <p>Importante: O texto delimitado deve ser codificado para URL. Exemplo:</p> <pre><code>orderItems=123%7CProduto%201%7C1000%7C1%7CUN%3B456%7CProduto%202%7C2000%7C2%7CUN\n</code></pre> <p>Formato: <code>sku|nome|valor|quantidade|unidadeMedida</code> Separador de itens: <code>;</code> Separador de campos: <code>|</code></p>"},{"location":"deeplink/#formatos-de-string-suportados","title":"Formatos de String Suportados","text":""},{"location":"deeplink/#cpf-e-cnpj","title":"CPF e CNPJ","text":"<p>Os par\u00e2metros <code>cpf</code>, <code>storeCnpj</code> e <code>automationCnpj</code> devem ser informados sem m\u00e1scara ou caracteres especiais.</p> <p>Exemplos corretos:</p> <ul> <li>CPF: <code>12345678909</code></li> <li>CNPJ: <code>12345678000123</code></li> </ul> <p>Exemplos incorretos:</p> <ul> <li>CPF: <code>123.456.789-09</code></li> <li>CNPJ: <code>12.345.678/0001-23</code></li> </ul>"},{"location":"deeplink/#host","title":"Host","text":"<p>O par\u00e2metro <code>host</code> aceita tanto endere\u00e7os IP quanto URLs.</p> <p>Exemplos:</p> <ul> <li>IP: <code>192.168.0.1</code></li> <li>URL: <code>https://api.pagamento.com.br</code></li> </ul>"},{"location":"deeplink/#parametros-json","title":"Par\u00e2metros JSON","text":"<p>Os par\u00e2metros que utilizam formato JSON (<code>providerParams</code>, <code>orderItems</code>) devem ser codificados adequadamente para URLs.</p> <p>Exemplo correto:</p> <pre><code>providerParams={\"terminal_id\":\"12345\",\"merchant_id\":\"67890\"}\n</code></pre> <p>Codificado para URL:</p> <pre><code>providerParams=%7B%22terminal_id%22%3A%2212345%22%2C%22merchant_id%22%3A%2267890%22%7D\n</code></pre> <p>Observa\u00e7\u00e3o importante sobre JSON e URL-encoding: Quando uma URL com par\u00e2metros JSON \u00e9 processada pelo Android, o sistema automaticamente faz o URL-decode antes de disponibilizar os valores. Por isso, \u00e9 essencial que voc\u00ea fa\u00e7a o URL-encode correto do JSON ao construir a URL de deeplink, caso contr\u00e1rio, caracteres especiais como <code>{</code>, <code>}</code>, <code>\"</code>, <code>:</code> podem quebrar a forma\u00e7\u00e3o da URL ou o parseamento do JSON.</p> <p>Para <code>orderItems</code>, o sistema tenta primeiro o parseamento como JSON, e se falhar, tenta o formato delimitado.</p>"},{"location":"deeplink/#data-e-hora","title":"Data e Hora","text":"<p>O par\u00e2metro <code>dateTimeOfSale</code> deve ser informado como timestamp em milissegundos.</p> <p>Exemplo:</p> <pre><code>dateTimeOfSale=1717401600000\n</code></pre>"},{"location":"deeplink/#valores-booleanos","title":"Valores Booleanos","text":"<p>Par\u00e2metros como <code>autoPrintReceipt</code>, <code>printMerchantReceipt</code>, <code>autoConfirm</code>, <code>finalizeTransaction</code> e <code>isProduction</code> aceitam valores <code>\"true\"</code> ou <code>\"false\"</code> como strings.</p> <p>Exemplos:</p> <pre><code>autoPrintReceipt=true\nautoConfirm=false\n</code></pre>"},{"location":"deeplink/#processando-resultados","title":"Processando Resultados","text":"<p>Ap\u00f3s a opera\u00e7\u00e3o ser conclu\u00edda, o PaykitDeeplink retorna um resultado que pode ser processado pela aplica\u00e7\u00e3o que originou a chamada. Os resultados s\u00e3o fornecidos como extras em um Intent, onde a chave \u00e9 <code>result</code>.</p> <p>Dependendo do tipo de opera\u00e7\u00e3o, o resultado pode conter:</p> <ul> <li>PaymentResult - Para opera\u00e7\u00f5es de pagamento (cr\u00e9dito, d\u00e9bito, voucher, etc.)</li> <li>ActivationResult - Para opera\u00e7\u00f5es de ativa\u00e7\u00e3o</li> <li>CancelResult - Para opera\u00e7\u00f5es de cancelamento</li> <li>TransactionQueryResult - Para consultas de transa\u00e7\u00e3o</li> <li>PrintResult - Para opera\u00e7\u00f5es de impress\u00e3o</li> <li>QueryReportResult - Para consultas de relat\u00f3rios</li> <li>Boolean - Para opera\u00e7\u00f5es de confirma\u00e7\u00e3o/desfazer transa\u00e7\u00e3o pendente</li> </ul>"},{"location":"deeplink/#exemplos-de-implementacao","title":"Exemplos de Implementa\u00e7\u00e3o","text":""},{"location":"deeplink/#1-implementacao-com-uri","title":"1. Implementa\u00e7\u00e3o com URI","text":"<p>Para implementar a chamada de um deeplink para pagamento com cart\u00e3o de cr\u00e9dito usando URI:</p> <pre><code>val uri = Uri.parse(\"paykit://payment\")\n    .buildUpon()\n    .appendQueryParameter(\"paymentType\", \"credit\")\n    .appendQueryParameter(\"amount\", \"1000\") // R$ 10,00\n    .appendQueryParameter(\"billOfSale\", \"PEDIDO123\")\n    .appendQueryParameter(\"installments\", \"1\")\n    .appendQueryParameter(\"autoPrintReceipt\", \"true\")\n    .build()\n\nval intent = Intent(Intent.ACTION_VIEW, uri)\nstartActivityForResult(intent, REQUEST_CODE_PAYMENT)\n</code></pre>"},{"location":"deeplink/#2-implementacao-com-intent","title":"2. Implementa\u00e7\u00e3o com Intent","text":"<p>Alternativamente, voc\u00ea pode implementar usando diretamente o Intent com extras:</p> <pre><code>val intent = Intent(Intent.ACTION_VIEW)\nintent.setPackage(\"com.linx.paykit.example\") // Pacote da aplica\u00e7\u00e3o de pagamento\nintent.setData(Uri.parse(\"paykit://payment\"))\nintent.putExtra(\"paymentType\", \"credit\")\nintent.putExtra(\"amount\", \"1000\") // R$ 10,00\nintent.putExtra(\"billOfSale\", \"PEDIDO123\")\nintent.putExtra(\"installments\", \"1\")\nintent.putExtra(\"autoPrintReceipt\", \"true\")\nstartActivityForResult(intent, REQUEST_CODE_PAYMENT)\n</code></pre>"},{"location":"deeplink/#processando-o-resultado","title":"Processando o resultado:","text":"<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n    super.onActivityResult(requestCode, resultCode, data)\n\n    if (requestCode == REQUEST_CODE_PAYMENT &amp;&amp; resultCode == Activity.RESULT_OK) {\n        val result = data?.getParcelableExtra&lt;ParcelablePaymentResult&gt;(\"result\")\n        // Processar o resultado da transa\u00e7\u00e3o\n        // Voc\u00ea pode obter dados de pagamento como:\n        val transactionId = result?.paymentResult?.id\n        val amount = result?.paymentResult?.amount\n        val success = result?.paymentResult?.status == TransactionStatus.COMPLETED\n        // ... outros dados conforme necess\u00e1rio\n    }\n}\n</code></pre>"},{"location":"deeplink/#biblioteca-de-apoio-ao-desenvolvedor","title":"Biblioteca de Apoio ao Desenvolvedor","text":"<p>O SDK disponibiliza classes auxiliares na biblioteca <code>com.linx.paykit.common.deeplink.parameters</code> no pacote <code>SDKPayServices.common</code> para facilitar a integra\u00e7\u00e3o com o PaykitDeeplink. Estas classes fornecem abstra\u00e7\u00f5es que simplificam o processo de constru\u00e7\u00e3o e processamento de par\u00e2metros.</p>"},{"location":"deeplink/#deeplinkparameter","title":"DeeplinkParameter","text":"<p>A classe <code>DeeplinkParameter</code> cont\u00e9m todas as defini\u00e7\u00f5es dos par\u00e2metros suportados como uma enumera\u00e7\u00e3o, o que facilita a consist\u00eancia na nomea\u00e7\u00e3o dos par\u00e2metros:</p> <pre><code>enum class DeeplinkParameter(val key: String, val value: String? = null) {\n    SCHEME(\"scheme\", \"paykit\"),\n    AUTOMATION_CNPJ(\"automationCnpj\"),\n    STORE_CNPJ(\"storeCnpj\"),\n    ACTIVATION_CODE(\"activationCode\"),\n    HOST(\"host\", \"payment\"),\n    // ... outros par\u00e2metros\n}\n</code></pre> <p>Usando esta enumera\u00e7\u00e3o, voc\u00ea pode referenciar os par\u00e2metros de forma segura para evitar erros de digita\u00e7\u00e3o:</p> <pre><code>intent.putExtra(DeeplinkParameter.AMOUNT.key, \"10.50\")\n</code></pre>"},{"location":"deeplink/#deeplinkextensions","title":"DeeplinkExtensions","text":"<p>A classe <code>DeeplinkExtensions</code> fornece m\u00e9todos de extens\u00e3o para facilitar a extra\u00e7\u00e3o e processamento de par\u00e2metros de um Intent:</p> <pre><code>// Exemplo de uso dos m\u00e9todos de extens\u00e3o\nval amount = intent.extractAmount()\nval cpf = intent.extractCpf()\nval providerParams = intent.extractProviderParams()\nval orderItems = intent.extractOrderItems()\n</code></pre> <p>Estes m\u00e9todos j\u00e1 realizam convers\u00f5es de tipos e tratamento de nulos, economizando c\u00f3digo e reduzindo erros:</p> <ul> <li><code>extractAmount()</code>: Converte a string para BigDecimal</li> <li><code>extractInstallments()</code>: Converte a string para Int</li> <li><code>extractDateTimeOfSale()</code>: Converte a string timestamp para Date</li> <li><code>extractProviderParams()</code>: Converte a string JSON para JSONObject</li> <li><code>extractOrderItems()</code>: Suporta parsing de formato JSON ou delimitado</li> </ul>"},{"location":"deeplink/#transactionparameterbuilder","title":"TransactionParameterBuilder","text":"<p>Para construir os par\u00e2metros de transa\u00e7\u00e3o necess\u00e1rios, o SDK fornece a classe <code>TransactionParameterBuilder</code>, que permite criar facilmente diferentes tipos de par\u00e2metros:</p> <pre><code>// Criando par\u00e2metros a partir de um Intent\nval builder = TransactionParameterBuilder.fromUri(intent)\n\n// Construindo diferentes tipos de par\u00e2metros\nval creditParams = builder.buildCreditParameters()\nval debitParams = builder.buildDebitParameters()\nval cancelParams = builder.buildCancelParameter()\n\n// Ou usando m\u00e9todo gen\u00e9rico\nval params = builder.build&lt;CreditParameters&gt;()\n</code></pre> <p>Esta classe simplifica a constru\u00e7\u00e3o de par\u00e2metros para diferentes tipos de transa\u00e7\u00f5es, extraindo automaticamente os valores do Intent e aplicando as convers\u00f5es necess\u00e1rias.</p>"},{"location":"deeplink/#paymenttypeoption-e-transactiontypeoption","title":"PaymentTypeOption e TransactionTypeOption","text":"<p>As classes <code>PaymentTypeOption</code> e <code>TransactionTypeOption</code> oferecem abstra\u00e7\u00f5es seguras para trabalhar com tipos de pagamento e transa\u00e7\u00e3o:</p> <pre><code>// Convertendo string para PaymentTypeOption\nval paymentTypeOption = PaymentTypeOption.fromString(\"credit\")\n\n// Convertendo string para TransactionTypeOption\nval transactionTypeOption = TransactionTypeOption.fromString(\"at_sight\")\n</code></pre> <p>Estas classes j\u00e1 tratam a convers\u00e3o de nomes de constantes para os enums correspondentes, incluindo normaliza\u00e7\u00e3o de caixa (lowercase).</p> <p>Usando essas classes auxiliares, voc\u00ea pode construir integra\u00e7\u00f5es mais robustas e com menos c\u00f3digo, reduzindo significativamente a possibilidade de erros em tempo de execu\u00e7\u00e3o.</p>"},{"location":"deeplink/#observacoes-importantes","title":"Observa\u00e7\u00f5es Importantes","text":"<ol> <li>Todos os valores monet\u00e1rios podem ser fornecidos como valores inteiros em centavos (ex: \"1000\"    para R$ 10,00) ou como valores decimais com ponto (ex: \"10.25\" para R$ 10,25).</li> <li>Se o par\u00e2metro <code>installments</code> n\u00e3o for informado ou for inv\u00e1lido, o sistema utilizar\u00e1 o valor    configurado pela adquirente ou o comportamento padr\u00e3o definido pelo provedor de pagamento.</li> <li>Para par\u00e2metros do tipo JSON (<code>providerParams</code>, <code>orderItems</code>), utilize a codifica\u00e7\u00e3o adequada    para URLs.</li> <li>Verifique com o provedor de pagamento quais s\u00e3o os par\u00e2metros espec\u00edficos exigidos.</li> <li>O par\u00e2metro <code>transactionType</code> pode variar dependendo do <code>paymentType</code> selecionado.</li> <li>Os itens do pedido podem ser enviados em formato JSON ou em formato delimitado.</li> <li>Alguns tipos de opera\u00e7\u00e3o podem n\u00e3o estar dispon\u00edveis, dependendo da configura\u00e7\u00e3o do SDK.</li> </ol>"},{"location":"primeiros-passos/","title":"SDK \u00danico","text":"<p>O SDK \u00danico \u00e9 uma plataforma completa de integra\u00e7\u00e3o para Android, que permite aos desenvolvedores construir, implantar, gerenciar e escalar a camada de pagamento das automa\u00e7\u00f5es em dispositivos Smart Android das adquirentes.</p>"},{"location":"primeiros-passos/#visao-da-solucao","title":"Vis\u00e3o da Solu\u00e7\u00e3o","text":"<p>O SDK \u00danico atualmente oferece suporte para as seguintes opera\u00e7\u00f5es.</p> <p></p>"},{"location":"primeiros-passos/#operacoes-disponiveis-por-sdk","title":"Opera\u00e7\u00f5es Dispon\u00edveis por SDK","text":"<p>A seguinte tabela resume as opera\u00e7\u00f5es dispon\u00edveis para cada SDK de adquirente integrado ao SDK \u00danico.</p> Opera\u00e7\u00e3o TEF Stone Rede PagSeguro GetNet Cielo Adyen Vero Sicoob Sicredi Ativar \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Cr\u00e9dito \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f D\u00e9bito \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Voucher \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u274c \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u274c \u274c PIX \u2714\ufe0f \u2714\ufe0f \u274c \u274c \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u274c Wallet \u2714\ufe0f \u274c \u274c \u274c \u274c \u274c \u274c \u2714\ufe0f \u274c \u274c Frotas \u2714\ufe0f \u274c \u274c \u274c \u274c \u274c \u274c \u274c \u274c \u274c Cancelar \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Imprimir \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Reimprimir \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Localizar transa\u00e7\u00e3o \u2714\ufe0f \u274c \u274c \u274c \u274c \u274c \u274c \u274c \u274c \u274c <ul> <li>\"\u2714\ufe0f\" indica que a opera\u00e7\u00e3o \u00e9 suportada pelo SDK.</li> <li>\"\u274c\" indica que a opera\u00e7\u00e3o n\u00e3o \u00e9 suportada pelo SDK.</li> </ul> <p>Esta tabela facilita a visualiza\u00e7\u00e3o das funcionalidades oferecidas por cada adquirente atrav\u00e9s do SDK \u00danico.</p>"},{"location":"primeiros-passos/#adquirentes-integradas","title":"Adquirentes Integradas","text":"<ul> <li>Stone</li> <li>Linx TEF</li> <li>Rede</li> <li>GetNet</li> <li>Cielo</li> <li>PagSeguro</li> <li>Adyen</li> <li>Vero</li> <li>Sicoob</li> <li>Sicredi</li> </ul>"},{"location":"primeiros-passos/#dispositivos-suportados","title":"Dispositivos Suportados","text":"<ul> <li>Sunmi P2-B</li> <li>Gertec GPOS 700</li> <li>Gertec GPOS 700X</li> <li>Positivo L300</li> <li>Positivo L400</li> <li>APOS A8</li> <li>Verifone X990</li> <li>Ingenico DX8000</li> <li>Saturn S1F2</li> </ul> <p>Aten\u00e7\u00e3o</p> <p>Verificar detalhes na sess\u00e3o Pr\u00e9-requisitos para Intega\u00e7\u00e3o com o SDK \u00danico.</p>"},{"location":"primeiros-passos/config-sdk/","title":"Configura\u00e7\u00e3o do SDK","text":""},{"location":"primeiros-passos/config-sdk/#primeiros-passos","title":"Primeiros passos","text":"<p>Para iniciar a configura\u00e7\u00e3o do SDK \u00fanico, o seu projeto precisa incluir as bibliotecas do SDK \u00danico. A solicita\u00e7\u00e3o do <code>Token de Acesso</code> e credenciamento devem ser realizados a partir do formul\u00e1rio abaixo:</p>"},{"location":"primeiros-passos/config-sdk/#passo-1-configurar-o-projeto","title":"Passo 1 - Configurar o projeto","text":"<p>Adicione esta se\u00e7\u00e3o ao seu arquivo <code>settings.gradle.kts</code> nos blocos <code>repositories</code>.</p> <pre><code>maven{\n    name=\"SDK_UNICO\"\n    url= uri(\"https://pkgs.dev.azure.com/stndtef/SmartPOS/_packaging/SDK_UNICO/maven/v1\")\n    credentials{\n        username = stndtef\n        password = {PERSONAL_ACCESS_TOKEN}\n    }\n}\n</code></pre> <p>Adicione a flavor da adquirente ao <code>build.gradle.kts</code>, no bloco <code>android</code> para sele\u00e7\u00e3o da adquirente no SDK \u00danico.</p> <pre><code>val flavors = setOf(\n    \"stone\" to 22,\n    \"linxtef\" to 22,\n    \"pagseguro\" to 23,\n    \"vero\" to 22,\n    \"getnet\" to 22,\n    \"rede\" to 22,\n    \"cielo\" to 24,\n    \"adyen\" to 28,\n    \"sicoob\" to 22,\n    \"sicoobX990DX\" to 24,\n)\n\nandroid {\n    ...\n    flavorDimensions += \"providers\"\n    productFlavors {\n        flavors.forEach{\n            create(it.first) {\n                minSdk = it.second\n            }\n        }\n    }\n}\n</code></pre> <p>Aten\u00e7\u00e3o</p> <p>Para aproveitar a resolu\u00e7\u00e3o din\u00e2mica do Gradle, \u00e9 necess\u00e1rio configurar as flavors para cada SDK de adquirente. Com o uso de flavors, cada build suporta apenas um \u00fanico SDK de adquirente, tornando invi\u00e1vel a inclus\u00e3o de m\u00faltiplos SDKs em uma mesma compila\u00e7\u00e3o. Se essa abordagem representar um problema para sua integra\u00e7\u00e3o, consulte a se\u00e7\u00e3o Standalone SDK \u00danico para alternativas.</p> <p>Aten\u00e7\u00e3o</p> <p>Aten\u00e7\u00e3o ao <code>minSdk</code> demonstrado acima, para evitar problemas de compatibilidades entre as depend\u00eancias internas.</p>"},{"location":"primeiros-passos/config-sdk/#passo-2-configurar-o-buildgradle-da-app","title":"Passo 2 - Configurar o build.gradle da app","text":"<p>Adicionar as seguintes depend\u00eancias necess\u00e1rias</p> <pre><code>val sdkPayServicesVersion = \"0.0.000169\"\n\nimplementation(\"SDKPayServices:core:$sdkPayServicesVersion\")\nimplementation(\"SDKPayServices:config:$sdkPayServicesVersion\")\nimplementation(\"SDKPayServices:common:$sdkPayServicesVersion\")\n</code></pre>"},{"location":"primeiros-passos/config-sdk/#passo-3-verificar-as-permissoes-necessarias","title":"Passo 3 - Verificar as permiss\u00f5es necess\u00e1rias","text":"<p>Adicione as seguintes permiss\u00f5es ao seu arquivo <code>AndroidManifest.xml</code>:</p> <pre><code>&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.seuapp\"&gt;\n\n    &lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.INTERNET\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.BLUETOOTH\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.WRITE_OWNER_DATA\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.READ_OWNER_DATA\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/&gt;\n    ...\n&lt;/manifest&gt;\n</code></pre>"},{"location":"primeiros-passos/config-sdk/#standalone-sdk-unico","title":"Standalone SDK \u00danico","text":"<p>Em alguns cen\u00e1rios, o integrador n\u00e3o pode utilizar flavors ou deseja acessar as bibliotecas do SDK \u00danico de maneira mais espec\u00edfica.</p> <p>Para esses casos, o SDK \u00danico oferece suporte \u00e0 refer\u00eancia direta da biblioteca do SDK \u00danico da Adquirente.</p> <p>Ao utilizar as bibliotecas standalone, n\u00e3o \u00e9 necess\u00e1rio definir flavors, permitindo que o integrador configure suas pr\u00f3prias flavors e parametriza\u00e7\u00f5es livremente.</p>"},{"location":"primeiros-passos/config-sdk/#referencias-de-bibliotecas","title":"Refer\u00eancias de bibliotecas","text":"<pre><code>val sdkPayServicesVersion = \"1.0.1.18662\"\nval adquirente = \"stone\"\n\nimplementation(\"SDKPayServices:core-$adquirente:$sdkPayServicesVersion\")\nimplementation(\"SDKPayServices:$adquirente:$sdkPayServicesVersion\")\nimplementation(\"SDKPayServices:config:$sdkPayServicesVersion\")\nimplementation(\"SDKPayServices:common:$sdkPayServicesVersion\")\n</code></pre>"},{"location":"primeiros-passos/config-sdk/#lista-de-dependencias","title":"Lista de depend\u00eancias","text":"Adquirente Biblioteca Core SDK \u00danico Biblioteca Adquirente SDK \u00danico Stone <code>SDKPayServices:core-stone:$version</code> <code>SDKPayServices:stone:$version</code> LinxTEF <code>SDKPayServices:core-linxtef:$version</code> <code>SDKPayServices:tef:$version</code> Adyen <code>SDKPayServices:core-adyen:$version</code> <code>SDKPayServices:tef:$version</code> Cielo <code>SDKPayServices:core-cielo:$version</code> <code>SDKPayServices:cielo:$version</code> Getnet <code>SDKPayServices:core-getnet:$version</code> <code>SDKPayServices:getnet:$version</code> PagSeguro <code>SDKPayServices:core-pagseguro:$version</code> <code>SDKPayServices:pagseguro:$version</code> Rede <code>SDKPayServices:core-rede:$version</code> <code>SDKPayServices:rede:$version</code> Sicoob (P2) <code>SDKPayServices:core-sicoob:$version</code> <code>SDKPayServices:sicoob:$version</code> Sicoob (X990/DX8000) <code>SDKPayServices:core-sicoobx990DX:$version</code> <code>SDKPayServices:sicoobX990DX:$version</code> SiTef <code>SDKPayServices:core-sitef:$version</code> <code>SDKPayServices:sitef:$version</code> Vero <code>SDKPayServices:core-vero:$version</code> <code>SDKPayServices:vero:$version</code>"},{"location":"primeiros-passos/etapas/","title":"Processo de Integra\u00e7\u00e3o","text":"<p>Para se integrar com o SDK \u00danico, voc\u00ea precisa passar as seguintes etapas:</p> <p></p> <p>Disponibilizamos um ambiente de sandbox (testes) onde \u00e9 poss\u00edvel simular todas as situa\u00e7\u00f5es que ocorrem em produ\u00e7\u00e3o, como transa\u00e7\u00f5es negadas e timeout.  Para receber uma credencial de integra\u00e7\u00e3o, \u00e9 necess\u00e1rio se cadastrar em nosso programa de parcerias.  Cadastre-se aqui.</p> <p></p> Etapa Atividade <code>Credenciamento</code> <p>Cadastro no Portal de Desenvolvimento do Sdk \u00danico</p> <p>Solicita\u00e7\u00e3o de terminal de desenvolvimento</p> <code>Download</code> <p>Baixar a \u00faltima vers\u00e3o do SDK \u00danico</p> <p>Baixar o aplicativo de Demonstra\u00e7\u00e3o</p> <code>Desenvolvimento</code> <p>Integra\u00e7\u00e3o da chamada de Pagamento em cr\u00e9dito \u00e0 vista (Cr\u00e9dito a vista)</p> <p>Integra\u00e7\u00e3o da chamada de Pagamento em cr\u00e9dito sem juros (Cr\u00e9dito Parcelado)</p> <p>Integra\u00e7\u00e3o da chamada de Pagamento em cr\u00e9dito com juros (Cr\u00e9dito Parcelado Emissor)</p> <p>Integra\u00e7\u00e3o da chamada de Pagamento em d\u00e9bito (D\u00e9bito)</p> <p>Integra\u00e7\u00e3o da chamada chamada de Pagamento por voucher (Voucher)</p> <p>Integra\u00e7\u00e3o da chamada de Estorno de Pagamentos</p> <p>Integra\u00e7\u00e3o da chamada de Impress\u00e3o de Comprovantes</p> <code>Distribui\u00e7\u00e3o do APK</code> <p>Selecionar o vers\u00e3o do SDK \u00danico espec\u00edfica da adquirente que deseja transacionar</p> <p>Gerar Deploy do APK compat\u00edvel com a adquirente selecionada.</p> <code>Roteiro de Testes</code> <p>Execu\u00e7\u00e3o dos roteiros de testes acompanhados pela equipe Linx Cross.</p> <p>Acompanhamento da execu\u00e7\u00e3o e corre\u00e7\u00f5es de Bug's no APK.</p> <code>Homologa\u00e7\u00e3o Adquirente</code> <p>Essa etapa ser\u00e1 apoiada pelo time Linx Cross, que ir\u00e1 preencher formul\u00e1rio de Certifica\u00e7\u00e3o, enviar e apoiar no roteiro de testes.</p> <code>Piloto</code> <p>Envio dos dados do estabelecimento que ir\u00e1 participar do projeto Piloto.</p> <p>Acompanhamento da execu\u00e7\u00e3o e corre\u00e7\u00f5es de Bug's no APK.</p> <code>Produ\u00e7\u00e3o</code> <p>Ao final da certifica\u00e7\u00e3o recebendo ser\u00e1 realizada a etapa de publica\u00e7\u00e3o do APK na loja da adquirente.</p>"},{"location":"primeiros-passos/integracao/","title":"Primeira Integra\u00e7\u00e3o","text":""},{"location":"primeiros-passos/integracao/#passo-1-ativacao","title":"Passo 1 - Ativa\u00e7\u00e3o","text":"<p>O SDK \u00fanico, em sua defini\u00e7\u00e3o, simplifica a integra\u00e7\u00e3o com os SDKs das adquirentes, a partir de sua interface \u00fanica.  Certifique-se de ter as chaves para baixar as depend\u00eancias, de acordo com a instru\u00e7\u00e3o de configura\u00e7\u00e3o do SDK \u00danico. E seu <code>PaykitId</code> que ser\u00e1 necess\u00e1rio para ativar o SDK \u00danico.</p>"},{"location":"primeiros-passos/integracao/#paykitid-e-credenciamento","title":"PaykitId e Credenciamento","text":"<p>Para utilizar o SDK \u00danico, \u00e9 necess\u00e1rio ser credenciado como Automa\u00e7\u00e3o Comercial/Integrador. Esse processo \u00e9 feito ao preencher o formul\u00e1rio na etapa de configura\u00e7\u00e3o do SDK \u00danico e mediante a aprova\u00e7\u00e3o.</p> <p>Para integrar e ativar sua aplica\u00e7\u00e3o com o SDK \u00danico, siga os passos abaixo. Certifique-se de adicionar as devidas importa\u00e7\u00f5es e configurar os par\u00e2metros corretamente.</p> <p>Aten\u00e7\u00e3o</p> <p>Realize a opera\u00e7\u00e3o de ativa\u00e7\u00e3o apenas 1 (uma) vez no terminal ou quando ele for realocado para outra loja.</p> <pre><code>import android.util.Log\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.activation.ActivationParameters\nimport com.linx.paykit.common.activation.ActivationResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\n\nval TAG = \"SDKUnicoExample\"\nvar paykit: Paykit? = null\n\nfun setupPaykit() {\n\n    val sdkUnicoBuildParams = Parameters(this, \"AppTeste\", PaykitId(\"PAYKIT_ID\"))\n    paykit = PaykitFactory().build(sdkUnicoBuildParams)\n\n    //Defina os par\u00e2metros de acordo com as adquirentes desejadas\n    val params = ActivationParameters(\"STORE_CNPJ\").apply {}\n\n    paykit?.activate(p, object : Callback&lt;ActivationResult&gt; {\n        override fun execute(result: ActivationResult) {\n            Log.d(TAG, \"SDK Ativado com sucesso\")\n        }\n    })\n}\n</code></pre> <p>A classe <code>Parameters</code> mapeia os par\u00e2metros do SDK \u00danico, que s\u00e3o utilizados no m\u00e9todo <code>activate</code>.</p> <p>A classe <code>ActivationParameters</code> mapeia os par\u00e2metros conforme os requisitos dos SDKs das Adquirentes, que demandam par\u00e2metros espec\u00edficos para ativa\u00e7\u00e3o.</p> <pre><code>data class Parameters(\n    val applicationContext: Context,\n    val appName: String = \"\",\n    val paykitId: String = \"\"\n)\n\ndata class ActivationParameters(\n    val storeCnpj: String,\n    val tef: TefActivationParameters = TefActivationParameters(),\n    val pagSeguro: PagSeguroActivationParameters = PagSeguroActivationParameters()\n)\n\ndata class TefActivationParameters(\n    var production: Boolean = false,\n    var host: String? = null,\n    var token: String? = null\n)\n\ndata class PagSeguroActivationParameters (\n    var activationCode: String? = null\n)\n</code></pre> <pre><code>val params = ActivationParameters(\"STORE_CNPJ\").apply {\n    tef.production = false\n    tef.token = \"TOKEN\"\n    pagSeguro.activationCode = \"CODIGO_PAG_SEGURO\"\n}\n</code></pre>"},{"location":"primeiros-passos/integracao/#passo-2-configuracao","title":"Passo 2 - Configura\u00e7\u00e3o","text":"<p>O SDK \u00danico permite definir quais modalidades e m\u00e9todos de pagamento estar\u00e3o dispon\u00edveis, facilitando a configura\u00e7\u00e3o por parte do integrador.</p> <p>Aten\u00e7\u00e3o</p> <p>Realize a opera\u00e7\u00e3o de configura\u00e7\u00e3o sempre que sua aplica\u00e7\u00e3o \u00e9 inicializada.</p> <p>A configura\u00e7\u00e3o dos m\u00e9todos de pagamento pode variar por adquirente. Segue abaixo defini\u00e7\u00e3o e exemplos:</p> <pre><code>interface Paykit {\n    //...\n    val paymentMethods: HashMap&lt;PaymentType, PaymentMethod&gt;\n}\n\nenum class PaymentType {\n    CREDIT,\n    DEBIT,\n    VOUCHER,\n    PIX,\n    WALLET,\n    FLEET,\n    QR_CODE\n}\n\ndata class PaymentMethod(\n    //...\n    var enabled: Boolean,\n    val methodTypes: HashMap&lt;TransactionType, MethodType&gt;? = null\n)\n\ndata class MethodType(\n    //...\n    var enabled: Boolean,\n)\n\nenum class DebitTransactionType(\n    //...\n) : TransactionType {\n    AT_SIGHT, // DEBITO_AVISTA\n    //...\n}\n</code></pre> <p>Para desativar uma modalidade ou m\u00e9todo de pagamento, basta alterar a <code>flag</code> de <code>enabled</code> para <code>false</code></p> <pre><code>paykit.paymentMethods[PaymentType.CREDIT]?.enabled = false\n</code></pre> <p>Esse recurso tamb\u00e9m \u00e9 \u00fatil quando o integrador deseja construir a interface de forma din\u00e2mica.</p> <pre><code>@Composable\nfun PaymentTypeSelector(\n    paymentMethods: HashMap&lt;PaymentType, PaymentMethod&gt;,\n    selectedType: PaymentType = PaymentType.DEBIT,\n    selectedTransactionType: TransactionType = DebitTransactionType.AT_SIGHT,\n    onTypeChanged: ((PaymentType) -&gt; Unit)? = null,\n    onTransactionTypeChanged: ((TransactionType) -&gt; Unit)? = null\n) {\n    Column(\n        modifier = Modifier\n            .fillMaxWidth()\n            .padding(16.dp)\n    ) {\n        paymentMethods.forEach { (paymentType, paymentMethod) -&gt;\n            PaymentTypeOption(\n                paymentType = paymentType,\n                paymentMethod = paymentMethod,\n                isSelected = selectedType == paymentType,\n                selectedTransactionType = selectedTransactionType,\n                onTypeChanged = onTypeChanged,\n                onTransactionTypeChanged = onTransactionTypeChanged\n            )\n        }\n    }\n}\n</code></pre> <ul> <li> <p>Verifique a aplica\u00e7\u00e3o de exemplo para auxiliar em sua integra\u00e7\u00e3o.</p> </li> <li> <p>Verifique as transa\u00e7\u00f5es dispon\u00edveis em Transa\u00e7\u00f5es.</p> </li> </ul>"},{"location":"primeiros-passos/paykit/","title":"API SDK \u00danico","text":""},{"location":"primeiros-passos/paykit/#interface-paykit","title":"Interface Paykit","text":"<p>A interface <code>Paykit</code> define os m\u00e9todos que cada adquirente deve implementar para realizar transa\u00e7\u00f5es de pagamento.</p>"},{"location":"primeiros-passos/paykit/#metodos","title":"M\u00e9todos","text":"M\u00e9todo Descri\u00e7\u00e3o Par\u00e2metros Retorno activate Ativa o SDK com os par\u00e2metros fornecidos. Executar apenas 1 (uma) vez ou quando o terminal \u00e9 realocado para outra loja. <code>activationParameters</code>: Par\u00e2metros de ativa\u00e7\u00e3o. <code>ActivationResult</code> credit Realiza uma transa\u00e7\u00e3o de cr\u00e9dito. <code>creditParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> debit Realiza uma transa\u00e7\u00e3o de d\u00e9bito. <code>debitParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> voucher Processa um pagamento por meio de voucher. <code>voucherParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> pix Processa um pagamento via PIX. <code>paymentParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> wallet Processa um pagamento utilizando carteira digital. <code>paymentParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> cancel Cancela uma transa\u00e7\u00e3o. <code>cancelParameter</code>: Par\u00e2metros de cancelamento. <code>CancelResult</code> preAuthorize Realiza uma transa\u00e7\u00e3o de pr\u00e9-autoriza\u00e7\u00e3o. <code>creditParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> capturePreAuthorization* Captura o valor de uma pr\u00e9-autoriza\u00e7\u00e3o. <code>pendingPreParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> cancelPreAuthorization* Cancela uma transa\u00e7\u00e3o de pr\u00e9-autoriza\u00e7\u00e3o. <code>pendingPreParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>CancelResult</code> printLastReceipt Imprime o \u00faltimo recibo. <code>receiptType</code>: Tipo de recibo a ser impresso. <code>PrintResult</code> print Imprime uma imagem bitmap. <code>bitmap</code>: A imagem a ser impressa. <code>PrintResult</code> retrieveSdkInfo Recupera informa\u00e7\u00f5es sobre o SDK. <code>Map&lt;String, String&gt;</code> startPayment Executa o fluxo gen\u00e9rico de pagamentos do SDK. <code>paymentParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> getTransaction Recupera informa\u00e7\u00f5es de uma transa\u00e7\u00e3o. <code>transactionParameters</code>: Par\u00e2metros da transa\u00e7\u00e3o. <code>PaymentResult</code> <p>*Algumas adquirentes n\u00e3o possuem essas opera\u00e7\u00f5es.</p>"},{"location":"primeiros-passos/projeto-exemplo/","title":"Projeto Exemplo","text":"<p>Para realizar testes com o SDK \u00danico, \u00e9 preciso selecionar com qual SDK deseja realizar a transa\u00e7\u00e3o.  Para tal, disponiblizamos uma App de Exemplo com flavors, definindo qual adquirente desejada.</p> SDK Vers\u00e3o SDK \u00danico Link <code>Aplicativo Demo</code> 1.1.1 Download <code>Aplicativo Demo</code> 1.1.2 Download"},{"location":"primeiros-passos/requisitos/","title":"Pr\u00e9-requisitos para Integra\u00e7\u00e3o com o SDK \u00danico","text":"<p>Para integrar o SDK \u00danico na sua aplica\u00e7\u00e3o, \u00e9 necess\u00e1rio atender a determinados requisitos t\u00e9cnicos.</p>"},{"location":"primeiros-passos/requisitos/#requisitos-do-sistema-operacional","title":"Requisitos do Sistema Operacional","text":"<p>O SDK \u00danico \u00e9 desenvolvido nativamente para Android, sendo necess\u00e1rio que sua aplica\u00e7\u00e3o tamb\u00e9m seja Android ou possua uma interface/plugin que permita a comunica\u00e7\u00e3o se for h\u00edbrida. A vers\u00e3o m\u00ednima suportada do Android \u00e9 a 5.0+ (API 21) ou superior.</p>"},{"location":"primeiros-passos/requisitos/#versoes-android-dos-terminais","title":"Vers\u00f5es Android dos Terminais","text":"<p>Os terminais compat\u00edveis possuem diferentes vers\u00f5es do sistema operacional, conforme definido pelo fabricante:</p> Stone TEF Rede Getnet PagSeguro Cielo Adyen Vero Sicoob Sicredi SUNMI P2  v7.1 \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f GPOS 700: v5.1 \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f GPOS 700X: v8.1 \u2714\ufe0f \u2714\ufe0f Positivo L400 : v11 \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Positivo L300 : v7.1 \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f APOS A8: v5.1 \u2714\ufe0f Verifone X990: v10 \u2714\ufe0f Ingenico DX8000: v10 \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Saturn S1F2: v10 \u2714\ufe0f <ul> <li>\"\u2714\ufe0f\" indica que o terminal \u00e9 compat\u00edvel pelo SDK.</li> </ul> <p>\u00c9 essencial desenvolver com retrocompatibilidade para a vers\u00e3o m\u00ednima (5.0) a fim de garantir o funcionamento em todos os modelos.</p>"},{"location":"primeiros-passos/requisitos/#versoes-das-bibliotecas-do-sdk-unico","title":"Vers\u00f5es das bibliotecas do SDK \u00danico","text":"<p>Para dar suporte a integradores com vers\u00f5es mais antigas do Gradle e Android, possu\u00edmos 2 vers\u00f5es do SDK \u00danico.  Uma vers\u00e3o retrocompativ\u00e9l, e outra com bibliotecas atualizadas.</p> Biblioteca Vers\u00e3o retrocompativ\u00e9l Vers\u00e3o atualizada <code>kotlin</code> <code>1.7.10</code> <code>1.9.22</code> <code>gradle</code> <code>6.9.4</code> <code>8.9</code> <p>Qualquer depend\u00eancia que o SDK \u00danico utilize internamente, vai respeitar sua determinada vers\u00e3o de <code>gradle</code> e <code>kotlin</code> e todo <code>bytecode</code> est\u00e1 sendo transpilado para <code>Java 8</code>, assim conseguimos atender uma maior quantidade de integradores.</p>"},{"location":"primeiros-passos/requisitos/#versoes-das-bibliotecas-das-adquirentes-do-sdk-unico","title":"Vers\u00f5es das bibliotecas das Adquirentes do SDK \u00danico","text":"Adquirente Vers\u00e3o Deeplink Stone \u2714\ufe0f Linx TEF <code>1.1.0-2203201805</code> \u274c Rede <code>4.0.6</code> \u2714\ufe0f Getnet <code>1.8.1</code> \u2714\ufe0f Cielo <code>2.0.1</code> \u2714\ufe0f PagSeguro* <code>1.28.0</code> \u274c Adyen** <code>1.1.0-2203201805</code> \u274c Vero <code>1.01.06</code> \u2714\ufe0f Sicoob (P2) <code>1.09</code> \u2714\ufe0f Sicoob (X990) <code>1.09</code> \u2714\ufe0f Sicredi <code>3.218</code> *** \u274c <ul> <li>\"\u2714\ufe0f\" indica que a adquirente possui Deeplink.</li> <li>\"\u274c\" indica que a adquirente n\u00e3o possui Deeplink.</li> </ul> <p>*** - Usa o SiTef. A vers\u00e3o indicada \u00e9 a vers\u00e3o do mSiTef</p>"},{"location":"releases/","title":"O que h\u00e1 de novo?","text":"<p>Aqui voc\u00ea encontrar\u00e1 as \u00faltimas atualiza\u00e7\u00f5es, recursos e melhorias do SDK \u00danico, organizadas por vers\u00e3o.</p> <p>\u26a0\ufe0f As vers\u00f5es <code>0.0.*</code> e <code>0.1.*</code> s\u00e3o consideradas alpha/beta e n\u00e3o representam vers\u00f5es est\u00e1veis.</p> <p>\u26a0\ufe0f As vers\u00f5es com final <code>r</code> significam que elas foram compiladas com <code>kotlin 1.8.22</code> e <code>Java 8</code>, basta adicionar o <code>r</code> ao n\u00famero de vers\u00e3o abaixo. </p>"},{"location":"releases/#2025","title":"2025","text":""},{"location":"releases/#abril","title":"Abril","text":"v1.1.49 (Stable)v1.0.1.18662.8 (Stable) <pre><code>- Suporte a novos \u00edcones integrados ao projeto.\n- Scaffold padr\u00e3o para unifica\u00e7\u00e3o da estrutura visual das telas.\n- Novo menu de sele\u00e7\u00e3o de meio de pagamento, mais intuitivo e integrado.\n- Tela de pagamento aprovado com design renovado.\n- Rotas tipadas adicionadas para maior seguran\u00e7a e organiza\u00e7\u00e3o na navega\u00e7\u00e3o.\n- Header (cabe\u00e7alho) redesenhado, com novo alinhamento, cor de fundo e organiza\u00e7\u00e3o de arquivos.\n- Transa\u00e7\u00f5es de PIX e QR Code (TEF)\n- Adicionado bot\u00e3o de voltar na tela de valor.\n- Foco autom\u00e1tico na caixa de texto do AmountInput.\n- Reorganiza\u00e7\u00e3o e nomea\u00e7\u00e3o de arquivos para melhor manuten\u00e7\u00e3o.\n- Telas agora s\u00e3o serializ\u00e1veis, possibilitando transi\u00e7\u00f5es mais robustas.\n- Remo\u00e7\u00e3o do header nas telas de impress\u00e3o, erro, retire o cart\u00e3o e aprovado.\n- Header removido ap\u00f3s tela de senha.\n- Melhorias nas telas de cancelamento, incluindo tipo da opera\u00e7\u00e3o.\n- V\u00e1rios ajustes de alinhamento visual, especialmente no header.\n- Corrigido problema no merge da tela AmountDefinitionScreen.\n- Diversas corre\u00e7\u00f5es na navega\u00e7\u00e3o entre telas.\n- Parametriza\u00e7\u00e3o de Layout via servidor, permitindo alterar logo e cores\n</code></pre> <pre><code>- Par\u00e2metro adicional na cria\u00e7\u00e3o de QR Code na integra\u00e7\u00e3o com TEF.\n- Retorno de par\u00e2metro adicional no callback de pagamentos com QR Code na integra\u00e7\u00e3o com o TEF.\n- Consulta gen\u00e9rica na integra\u00e7\u00e3o com o TEF.\n- Impress\u00e3o via ReceiptBuilder adaptada\n- Novo \u00edcone e ajustes visuais para opera\u00e7\u00f5es espec\u00edficas\n- Adi\u00e7\u00e3o de tratamento especial para voucher como d\u00e9bito\n- Suporte a cancelamento com retorno do comprovante formatado\n- Suporte \u00e0 listagem de transa\u00e7\u00f5es com status e a\u00e7\u00f5es\n- Alterado \u00edcone de pagamento frotas e carteira.\n- Atualizada vers\u00e3o SDK DTEF MOBILE 2.7.16-2504031854\n</code></pre>"},{"location":"releases/#janeiro","title":"Janeiro","text":"v0.1.1 <pre><code>- Conectividade com SDK Sicoob\n- Conectividade com SDK Sicredi (Sitef)\n- Implementa\u00e7\u00e3o de fluxo de captura gen\u00e9rico\n- Suporte a confirma\u00e7\u00e3o autom\u00e1tica e configura\u00e7\u00f5es customizadas\n- Refatora\u00e7\u00e3o da l\u00f3gica de transa\u00e7\u00f5es\n- Separa\u00e7\u00e3o de responsabilidades via camada de fachada\n- Novos par\u00e2metros para integra\u00e7\u00e3o com sistemas de terceiro\n</code></pre>"},{"location":"releases/#2024","title":"2024","text":""},{"location":"releases/#novembro","title":"Novembro","text":"v0.1.1.* <pre><code>- Jornada completa de captura de pagamentos\n- Novos fluxos de ativa\u00e7\u00e3o e cancelamento\n- Telas de entrada e navega\u00e7\u00e3o redesenhadas\n- Impress\u00e3o e callbacks unificados para todos os providers\n</code></pre>"},{"location":"releases/#outubro","title":"Outubro","text":"v0.1.0.* <pre><code>- Conectividade com SDK Rede\n- Conectividade com SDK Vero    \n- Conectividade com SDK Cielo \n- Conectividade com SDK Adyen \n</code></pre>"},{"location":"releases/#junho","title":"Junho","text":"<p>A primeira vers\u00e3o do SDK \u00danico foi lan\u00e7ada com suporte para conectividade com o LinxTef e Stone.</p> v0.0.1.* <pre><code>- Conectividade com SDK Mobile Linx Tef\n- Conectividade com SDK Stone \n- Conectividade com SDK PagSeguro\n- Conectividade com SDK GetNet\n- Sele\u00e7\u00e3o din\u00e2mica de adquirente com base na configura\u00e7\u00e3o\n- Implementa\u00e7\u00e3o inicial da ativa\u00e7\u00e3o e impress\u00e3o por adquirente\n- Estrutura do projeto com flavors e pipeline b\u00e1sico\n</code></pre>"},{"location":"snippets/cancel-parameters/","title":"Cancel parameters","text":""},{"location":"snippets/cancel-parameters/#cancelparameter","title":"<code>CancelParameter</code>","text":"<p>O objeto <code>CancelParameter</code>, utilizado em transa\u00e7\u00f5es de cancelamento.</p> Campo Tipo Descri\u00e7\u00e3o paymentId <code>String</code> Identificador da transa\u00e7\u00e3o de pagamento que ser\u00e1 cancelada. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. amount <code>BigDecimal?</code> O valor total da transa\u00e7\u00e3o de pagamento que ser\u00e1 cancelada. Este campo \u00e9 opcional. originalPaymentType <code>PaymentType?</code> Modalidade (d\u00e9bito, cr\u00e9dito, voucher, Pix, etc.) da transa\u00e7\u00e3o de pagamento. Este campo \u00e9 opcional. originalTransactionDate <code>Date?</code> Data em que a transa\u00e7\u00e3o de pagamento foi realizada. Este campo \u00e9 opcional. cancelAmount <code>BigDecimal?</code> O valor que ser\u00e1 cancelado da transa\u00e7\u00e3o para cancelamento parcial. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF."},{"location":"snippets/cancel-result/","title":"Cancel result","text":""},{"location":"snippets/cancel-result/#detalhamento-do-cancelresult","title":"Detalhamento do <code>CancelResult</code>","text":"<p>O objeto <code>CancelResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o original. originalId <code>String</code> Identificador da transa\u00e7\u00e3o original. cancelledAmount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o de cancelamento. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"snippets/cancel-result/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"snippets/cancel-result/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"snippets/credit-parameters/","title":"Credit parameters","text":""},{"location":"snippets/credit-parameters/#creditparameters","title":"<code>CreditParameters</code>","text":"<p>O objeto <code>CreditParameters</code>, utilizado em transa\u00e7\u00f5es de cr\u00e9dito.</p> Campo Tipo Descri\u00e7\u00e3o amount <code>BigDecimal</code> O valor total da transa\u00e7\u00e3o. installments <code>Int?</code> O n\u00famero de parcelas para pagamento. cpf <code>String?</code> CPF do cliente, se aplic\u00e1vel. Este campo \u00e9 opcional. billOfSale <code>String?</code> Documento de venda associado \u00e0 transa\u00e7\u00e3o. Este campo \u00e9 opcional. dateTimeOfSale <code>Date?</code> Data e hora em que a venda foi realizada. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. items <code>List&lt;OrderItem&gt;?</code> Lista dos items de venda, relacionados a transa\u00e7\u00e3o a ser realizada. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. deadline <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. postCreditDays <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. creditType <code>CreditTransactionType?</code> Tipo de transa\u00e7\u00e3o de cr\u00e9dito. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF"},{"location":"snippets/credit-type/","title":"Credit type","text":""},{"location":"snippets/credit-type/#credittransactiontype","title":"<code>CreditTransactionType</code>","text":"<p>Para o <code>creditType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de Cr\u00e9dito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de Cr\u00e9dito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - CREDITO_AVISTA | TRANSACAO_CREDITO_VISTA -&gt; AT_SIGHT\n * - CREDITO_PARCELADO_LOJA | TRANSACAO_CREDITO_PARCELADO_LOJISTA -&gt; STORE_INSTALMENTS\n * - CREDITO_PARCELADO_ADM -&gt; ADMIN_INSTALMENTS\n * - CREDITO_PARCELADO_BNCO -&gt; BANK_INSTALMENTS\n * - PRE_AUTORIZACAO -&gt; PRE_AUTHORIZATION\n * - CREDITO_CREDIARIO_CREDITO -&gt; CREDIT_FINANCING\n * - TRANSACAO_CREDITO_VISTA -&gt; CREDIT_TRANSACTION_AT_SIGHT\n * - TRANSACAO_CREDITO_PARCELADO_EMISSOR -&gt; ISSUER_INSTALMENTS\n * - TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO -&gt; CREDIT_1_MINUTE\n */\nenum class CreditTransactionType(\n    override val hasInterest: Boolean,\n    override val hasInstalments: Boolean\n) : TransactionType {\n    AT_SIGHT(false, false),                 // CREDITO_AVISTA\n    STORE_INSTALMENTS(false, true),         // CREDITO_PARCELADO_LOJA\n    ADMIN_INSTALMENTS(true, true),          // CREDITO_PARCELADO_ADM\n    BANK_INSTALMENTS(true, true),           // CREDITO_PARCELADO_BNCO\n    PRE_AUTHORIZATION(false, false),        // PRE_AUTORIZACAO\n    FINANCING(true, false),                 // CREDITO_CREDIARIO_CREDITO\n    ISSUER_INSTALMENTS(true, true),         // TRANSACAO_CREDITO_PARCELADO_EMISSOR\n    CREDIT_1_MINUTE(false, false);          // TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO\n}\n</code></pre>"},{"location":"snippets/debit-parameters/","title":"Debit parameters","text":""},{"location":"snippets/debit-parameters/#debitparameters","title":"<code>DebitParameters</code>","text":"<p>O objeto <code>DebitParameters</code>, utilizado em transa\u00e7\u00f5es de d\u00e9bito.</p> Campo Tipo Descri\u00e7\u00e3o amount <code>BigDecimal</code> O valor total da transa\u00e7\u00e3o. installments <code>Int?</code> O n\u00famero de parcelas para pagamento. Este campo \u00e9 opcional. cpf <code>String?</code> CPF do cliente, se aplic\u00e1vel. Este campo \u00e9 opcional. billOfSale <code>String?</code> Documento de venda associado \u00e0 transa\u00e7\u00e3o. Este campo \u00e9 opcional. dateTimeOfSale <code>Date?</code> Data e hora em que a venda foi realizada. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. items <code>List&lt;OrderItem&gt;?</code> Lista dos items de venda, relacionados a transa\u00e7\u00e3o a ser realizada. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. deadline <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. postCreditDays <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. debitType <code>DebitTransactionType?</code> Tipo de transa\u00e7\u00e3o de d\u00e9bito. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF."},{"location":"snippets/debit-type/","title":"Debit type","text":""},{"location":"snippets/debit-type/#debittransactiontype","title":"<code>DebitTransactionType</code>","text":"<p>Para o <code>debitType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de D\u00e9bito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de D\u00e9bito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - DEBITO_AVISTA | TRANSACAO_DEBITO_VISTA -&gt; AT_SIGHT\n * - DEBITO_PAGTO_FATURA_DEBITO -&gt; DEBIT_INVOICE_PAYMENT\n * - TRANSACAO_BANRICOMPRAS_VISTA -&gt; ACQUIRER_AT_SIGHT\n * - TRANSACAO_BANRICOMPRAS_PREDATADO -&gt; POSTDATED\n * - TRANSACAO_BANRICOMPRAS_PARCELADO -&gt; WITH_INSTALMENTS\n */\nenum class DebitTransactionType(\n    override val hasInterest: Boolean = false,\n    override val hasInstalments: Boolean = false\n) : TransactionType {\n    AT_SIGHT,                  // DEBITO_AVISTA\n    ACQUIRER_AT_SIGHT,         // TRANSACAO_BANRICOMPRAS_VISTA\n    INVOICE_PAYMENT,           // DEBITO_PAGTO_FATURA_DEBITO\n    POSTDATED,                 // TRANSACAO_BANRICOMPRAS_PREDATADO\n    WITH_INSTALMENTS(hasInstalments = true) // TRANSACAO_BANRICOMPRAS_PARCELADO\n}\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/","title":"Fleet parameter builder","text":""},{"location":"snippets/fleet-parameter-builder/#teffleetunifiedbuilder","title":"<code>TefFleetUnifiedBuilder</code>","text":"<p>Builder especializado para opera\u00e7\u00f5es de frota unificadas para TEF.</p> <p>Oferece suporte para configura\u00e7\u00f5es mais complexas, permitindo montar o JSONObject de forma mais segura:  </p>"},{"location":"snippets/fleet-parameter-builder/#configuracoes-basicas","title":"Configura\u00e7\u00f5es B\u00e1sicas:","text":"<pre><code>val builder = TefFleetUnifiedBuilder()\n    .setAcquirerCode(121)              // C\u00f3digo da adquirente (obrigat\u00f3rio)\n    .setOperationType(1)               // Tipo de opera\u00e7\u00e3o\n    .setWorkOrderNumber(\"OS123\")       // N\u00famero da OS\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#dados-do-veiculo-e-motorista","title":"Dados do Ve\u00edculo e Motorista:","text":"<pre><code>builder\n    .setVehiclePlate(\"ABC1234\")       // Placa\n    .setDriverId(\"123456\")            // ID do motorista\n    .setCpf(\"12345678900\")            // CPF\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#metricas-do-veiculo","title":"M\u00e9tricas do Ve\u00edculo:","text":"<pre><code>builder\n    .setOdometer(50000)               // Hod\u00f4metro\n    .setHourMeter(1000)               // Hor\u00edmetro\n    .setMileage(5000)                 // Quilometragem\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#configuracoes-br-premmia","title":"Configura\u00e7\u00f5es BR Premmia:","text":"<pre><code>builder\n    .setHasBrPremmia(true)\n    .setBrPremmiaEmployeeCode(\"BP123\")\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#detalhes-da-operacao","title":"Detalhes da Opera\u00e7\u00e3o:","text":"<pre><code>// Adicionar Servi\u00e7o\nbuilder.addServiceItem(\n    ServiceItem(\n        code = \"SERV1\",\n        quantity = 2.0,\n        unitPrice = 50.0.toBigDecimal()\n    )\n)\n\n// Adicionar Abastecimento\nbuilder.addRefuelItem(\n    RefuelItem(\n        code = \"COMB1\",\n        quantity = 30.0,\n        unitPrice = 5.0.toBigDecimal()\n    )\n)\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#parametros-customizados","title":"Par\u00e2metros Customizados:","text":"<pre><code>builder.setParameter(\"chave\", ParameterValue.Str(\"valor\"))\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#finalizacao","title":"Finaliza\u00e7\u00e3o","text":"<pre><code>val jsonObject = builder.build()    // Gera o objeto JSON final\n</code></pre>"},{"location":"snippets/fleet-parameter-builder/#observacoes-importantes","title":"Observa\u00e7\u00f5es Importantes:","text":"<ul> <li>O c\u00f3digo da adquirente (<code>acquirerCode</code>) \u00e9 obrigat\u00f3rio</li> <li>Os detalhes da opera\u00e7\u00e3o (servi\u00e7os e abastecimentos) s\u00e3o inicializados automaticamente</li> <li>Suporta m\u00faltiplos servi\u00e7os e abastecimentos na mesma opera\u00e7\u00e3o</li> <li>Ideal para opera\u00e7\u00f5es complexas de frota com m\u00faltiplos itens</li> </ul>"},{"location":"snippets/nsuInfo-type/","title":"nsuInfo type","text":""},{"location":"snippets/nsuInfo-type/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"snippets/payment-result/","title":"Payment result","text":""},{"location":"snippets/payment-result/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"snippets/payment-result/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"snippets/payment-result/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"snippets/paymentType-Field/","title":"paymentType Field","text":"<p>| paymentType | <code>Enum</code>   | Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis:                 | |            |          | - <code>CREDIT</code>                               | |            |          | - <code>DEBIT</code>                                    | |            |          | - <code>VOUCHER</code>                                 | |            |          | - <code>PIX</code>                             | |            |          | - <code>WALLET</code>                                  | |            |          | - <code>FLEET</code>                                  | |            |          | - <code>QR_CODE</code>                                  |</p>"},{"location":"snippets/pending-pre-parameters/","title":"Pending pre parameters","text":""},{"location":"snippets/pending-pre-parameters/#pendingpreparameters","title":"<code>PendingPreParameters</code>","text":"<p>O objeto <code>PendingPreParameters</code>, utilizado em transa\u00e7\u00f5es de captura ou cancelamento de pr\u00e9-autoriza\u00e7\u00e3o.</p> Campo Tipo Descri\u00e7\u00e3o preId <code>String</code> Identificador da transa\u00e7\u00e3o que ser\u00e1 capturada ou cancelada. amount <code>BigDecimal?</code> O valor que ser\u00e1 capturado na transa\u00e7\u00e3o. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF."},{"location":"snippets/print-result/","title":"Print result","text":""},{"location":"snippets/print-result/#detalhamento-do-printresult","title":"Detalhamento do <code>PrintResult</code>","text":"<p>O objeto <code>PrintResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais sobre o status da impress\u00e3o. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> dateTime <code>Date</code> Data e hora da impress\u00e3o. status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>NORMALLY</code>: Impressora funcionando normalmente. - <code>WITHOUT_PAPER</code>: Impressora sem papel. - <code>VOLTAGE_TO_LOW</code>: Voltagem muito baixa. - <code>NO_PRINTER_DETECTED</code>: Nenhuma impressora detectada. - <code>OVERHEATED</code>: Impressora superaquecida. - <code>CUT_JAM_ERROR</code>: Erro de atolamento no cortador. - <code>PREPARING_PRINTER</code>: Preparando impressora. - <code>PRINTING_UNFINISHED</code>: A \u00faltima impress\u00e3o n\u00e3o foi conclu\u00edda. - <code>ABNORMAL_COMMUNICATION</code>: Comunica\u00e7\u00e3o anormal com a impressora. - <code>NO_PRINTER_BLACK_MARK</code>: Marca preta n\u00e3o detectada. - <code>CUTTER_RECOVERED</code>: Cortador recuperado. - <code>OPEN_THE_LID</code>: Abra a tampa. - <code>ERROR_DATA_PACKAGE_TOO_LONG</code>: Pacote de dados muito longo. - <code>FONT_ERROR</code>: Biblioteca de fontes n\u00e3o instalada. - <code>FORMAT_PRINT_ERROR</code>: Erro no formato do pacote de impress\u00e3o. - <code>BUSY_PRINTER</code>: Impressora ocupada. - <code>GENERIC_ERROR</code>: Algo est\u00e1 errado com o m\u00f3dulo. - <code>SERVICE_UNAVAILABLE</code>: Servi\u00e7o indispon\u00edvel. - <code>METHOD_UNAVAILABLE</code>: M\u00e9todo indispon\u00edvel. - <code>INVALID_PARAMETER</code>: Par\u00e2metro inv\u00e1lido. - <code>UNAVAILABLE_PARAMETER</code>: Par\u00e2metro indispon\u00edvel. - <code>NO_PERMISSION</code>: Sem permiss\u00e3o para a opera\u00e7\u00e3o. - <code>DEPRECATED</code>: M\u00e9todo/par\u00e2metro obsoleto. - <code>SUCCESS</code>: Tarefa conclu\u00edda com sucesso. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. success <code>Boolean</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"snippets/processor-Field/","title":"processor Field","text":"<p>| processor | <code>Enum</code>   | Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis:                | |               |          | - <code>STONE</code>                                                            | |               |          | - <code>TEF</code>                                                              | |               |          | - <code>REDE</code>                                                             | |               |          | - <code>GETNET</code>                                                           | |               |          | - <code>PAGSEGURO</code>                                                        | |               |          | - <code>VERO</code>                                                             | |               |          | - <code>CIELO</code>                                                            | |               |          | - <code>SICOOB</code>                                                           | |               |          | - <code>SITEF</code>                                                            |</p>"},{"location":"snippets/status-Field/","title":"status Field","text":"<p>| status | <code>Enum</code>   | Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis:                 | |            |          | - <code>PENDING</code>: Aguardando processamento.                               | |            |          | - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada.                                    | |            |          | - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada.                                  | |            |          | - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada.                                  | |            |          | - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o.                             | |            |          | - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada.                                    |</p>"},{"location":"snippets/transactionInfo-type/","title":"transactionInfo type","text":""},{"location":"snippets/transactionInfo-type/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"snippets/transactioninfo-result/","title":"Transactioninfo result","text":""},{"location":"snippets/transactioninfo-result/#detalhamento-do-transactionqueryresult","title":"Detalhamento do <code>TransactionQueryResult</code>","text":"<p>O objeto <code>TransactionQueryResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es da consulta. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo da transa\u00e7\u00e3o (Informado pela automa\u00e7\u00e3o comercial). processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"snippets/transactioninfo-result/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"snippets/transactioninfo-result/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"snippets/voucher-type/","title":"Voucher type","text":""},{"location":"snippets/voucher-type/#vouchertransactiontype","title":"<code>VoucherTransactionType</code>","text":"<p>Para o <code>voucherType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de Voucher.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de Voucher.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - VOUCHER_ALIMENTACAO -&gt; FOOD\n * - VOUCHER_REFEICAO -&gt;    MEAL\n * - VOUCHER_AUTOMOTIVO -&gt;  AUTOMOTIVE\n * - VOUCHER_CULTURA -&gt;     CULTURE\n * - VOUCHER_PEDAGIO -&gt;     TOLL\n * - VOUCHER_BENEFICIOS -&gt;  BENEFITS\n * - VOUCHER_AUTO -&gt;        AUTOMOBILE\n * - VOUCHER_CONSULTA_SALDO -&gt; BALANCE_INQUIRY\n * - VOUCHER_VALE_PEDAGIO -&gt; TOLL_VALE\n * - TRANSACAO_VOUCHER -&gt; DEFAULT\n */\nenum class VoucherTransactionType(\n    override val hasInterest: Boolean = false,\n    override val hasInstalments: Boolean = false\n) : TransactionType {\n    FOOD,                     // VOUCHER_ALIMENTACAO\n    MEAL,                     // VOUCHER_REFEICAO\n    AUTOMOTIVE,               // VOUCHER_AUTOMOTIVO\n    CULTURE,                  // VOUCHER_CULTURA\n    TOLL,                     // VOUCHER_PEDAGIO\n    BENEFITS,                 // VOUCHER_BENEFICIOS\n    AUTOMOBILE,               // VOUCHER_AUTO\n    BALANCE_INQUIRY,          // VOUCHER_CONSULTA_SALDO\n    TOLL_VALE,                // VOUCHER_VALE_PEDAGIO\n}\n</code></pre>"},{"location":"transactions/","title":"Transa\u00e7\u00f5es","text":"<p>O SDK \u00danico \u00e9 uma biblioteca do PayKit, exclusiva para Android, respons\u00e1vel pela integra\u00e7\u00e3o de pagamentos.  Pode ser utilizado em terminais de pagamento para diversos tipos de transa\u00e7\u00f5es e fun\u00e7\u00f5es.  Este documento tem como objetivo explicar e demonstrar como utilizar a biblioteca Paykit para realizar opera\u00e7\u00f5es como pagamentos, cancelamento e reimpress\u00f5es em uma aplica\u00e7\u00e3o Android.</p>"},{"location":"transactions/#operacoes","title":"Opera\u00e7\u00f5es","text":"<p>O SDK \u00danico atualmente suporta as seguintes opera\u00e7\u00f5es.</p> <ul> <li> Cr\u00e9dito \u2013 Pagamento de cr\u00e9dito</li> <li> Pr\u00e9-autoriza\u00e7\u00e3o \u2013 Pr\u00e9-autoriza\u00e7\u00e3o de cr\u00e9dito</li> <li> D\u00e9bito \u2013 Pagamento por d\u00e9bito</li> <li> Voucher \u2013 Pagamento por voucher</li> <li> Pix \u2013 Pagamento por Pix</li> <li> Wallet \u2013 Pagamento por Wallets</li> <li> Frota \u2013 Controle de frota</li> <li> Cancelamento \u2013 Cancelamento de pagamentos</li> <li> Reimpress\u00e3o \u2013 Reimpress\u00f5es de comprovantes cliente/estabelecimento</li> <li> Impress\u00e3o \u2013 Impress\u00f5es de comprovantes bitmap</li> <li> Localiza Transa\u00e7\u00e3o \u2013 Localiza uma transa\u00e7\u00e3o realizada</li> </ul>"},{"location":"transactions/cancelamento/","title":"Cancelamento","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada. </p> <p>Para realizar uma Transa\u00e7\u00e3o de Cancelamento, utilize o m\u00e9todo cancel da classe paykit.</p> <p>Os par\u00e2metros de entrada da transa\u00e7\u00e3o s\u00e3o configurados no objeto CancelParameter</p>"},{"location":"transactions/cancelamento/#cancelparameter","title":"<code>CancelParameter</code>","text":"<p>O objeto <code>CancelParameter</code>, utilizado em transa\u00e7\u00f5es de cancelamento.</p> Campo Tipo Descri\u00e7\u00e3o paymentId <code>String</code> Identificador da transa\u00e7\u00e3o de pagamento que ser\u00e1 cancelada. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. amount <code>BigDecimal?</code> O valor total da transa\u00e7\u00e3o de pagamento que ser\u00e1 cancelada. Este campo \u00e9 opcional. originalPaymentType <code>PaymentType?</code> Modalidade (d\u00e9bito, cr\u00e9dito, voucher, Pix, etc.) da transa\u00e7\u00e3o de pagamento. Este campo \u00e9 opcional. originalTransactionDate <code>Date?</code> Data em que a transa\u00e7\u00e3o de pagamento foi realizada. Este campo \u00e9 opcional. cancelAmount <code>BigDecimal?</code> O valor que ser\u00e1 cancelado da transa\u00e7\u00e3o para cancelamento parcial. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. <p>Os par\u00e2metros <code>paymentId</code>, <code>amount</code>, <code>originalPaymentType</code> e <code>originalTransactionDate</code> s\u00e3o utilizados para localizar a transa\u00e7\u00e3o original que deve ser cancelada. Quando n\u00e3o informado ser\u00e1 consultado no momento do cancelamento. Alguns provedores permitem cancelamento parcial (veja regras de neg\u00f3cio com o pr\u00f3prio provedor). Para esse caso possu\u00edmos o par\u00e2metro <code>cancelAmount</code> que pode ser utilizado. </p>"},{"location":"transactions/cancelamento/#exemplo","title":"Exemplo","text":"<p>Para realizar uma Transa\u00e7\u00e3o de Cancelamento, utilize o exemplo abaixo.</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.CancelResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.CancelParameter\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Cancelamento\", PaykitId(\"PAYKIT_ID\")))\n\n        val cancelParameter = CancelParameter(\n            paymentId = \"1\",  // (transactionId) NSU da Transa\u00e7\u00e3o\n            amount = BigDecimal(\"100.00\"),  // Valor da original da transa\u00e7\u00e3o\n            originalTransactionDate = Date()  // Data original da transa\u00e7\u00e3o\n        )\n\n        paykit.cancel(cancelParameter, object : Callback&lt;CancelResult&gt; {\n            override fun execute(result: CancelResult) {\n                 Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: CancelResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da revers\u00e3o\n    }\n}\n</code></pre>"},{"location":"transactions/cancelamento/#detalhamento-do-cancelresult","title":"Detalhamento do <code>CancelResult</code>","text":"<p>O objeto <code>CancelResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o original. originalId <code>String</code> Identificador da transa\u00e7\u00e3o original. cancelledAmount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o de cancelamento. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/cancelamento/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/cancelamento/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/credito-a-vista/","title":"Credito a vista","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Cr\u00e9dito \u00e0 vista, utilize o exemplo abaixo.</p> <p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios:  - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.common.parameter.type.CreditTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Credito \u00e0 Vista\", PaykitId(\"PAYKIT_ID\"))\n\n        val creditParameter = CreditParameters(\n            installments = 1,  // N\u00famero de parcelas (1 para cr\u00e9dito \u00e0 vista)\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            creditType =  CreditTransactionType.AT_SIGHT // Cr\u00e9dito \u00e0 vista\n        )\n\n        paykit.credit(creditParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(id: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/credito-a-vista/#credittransactiontype","title":"<code>CreditTransactionType</code>","text":"<p>Para o <code>creditType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de Cr\u00e9dito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de Cr\u00e9dito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - CREDITO_AVISTA | TRANSACAO_CREDITO_VISTA -&gt; AT_SIGHT\n * - CREDITO_PARCELADO_LOJA | TRANSACAO_CREDITO_PARCELADO_LOJISTA -&gt; STORE_INSTALMENTS\n * - CREDITO_PARCELADO_ADM -&gt; ADMIN_INSTALMENTS\n * - CREDITO_PARCELADO_BNCO -&gt; BANK_INSTALMENTS\n * - PRE_AUTORIZACAO -&gt; PRE_AUTHORIZATION\n * - CREDITO_CREDIARIO_CREDITO -&gt; CREDIT_FINANCING\n * - TRANSACAO_CREDITO_VISTA -&gt; CREDIT_TRANSACTION_AT_SIGHT\n * - TRANSACAO_CREDITO_PARCELADO_EMISSOR -&gt; ISSUER_INSTALMENTS\n * - TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO -&gt; CREDIT_1_MINUTE\n */\nenum class CreditTransactionType(\n    override val hasInterest: Boolean,\n    override val hasInstalments: Boolean\n) : TransactionType {\n    AT_SIGHT(false, false),                 // CREDITO_AVISTA\n    STORE_INSTALMENTS(false, true),         // CREDITO_PARCELADO_LOJA\n    ADMIN_INSTALMENTS(true, true),          // CREDITO_PARCELADO_ADM\n    BANK_INSTALMENTS(true, true),           // CREDITO_PARCELADO_BNCO\n    PRE_AUTHORIZATION(false, false),        // PRE_AUTORIZACAO\n    FINANCING(true, false),                 // CREDITO_CREDIARIO_CREDITO\n    ISSUER_INSTALMENTS(true, true),         // TRANSACAO_CREDITO_PARCELADO_EMISSOR\n    CREDIT_1_MINUTE(false, false);          // TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO\n}\n</code></pre>"},{"location":"transactions/credito-a-vista/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/credito-a-vista/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/credito-a-vista/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/credito-parcelado/","title":"Credito parcelado","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Cr\u00e9dito parcelado, utilize o exemplo abaixo. </p> <p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios: - installments: MAIOR que 1 - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.common.parameter.type.CreditTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Credito parcelado\", PaykitId(\"PAYKIT_ID\")))\n\n        val creditParameter = CreditParameters(\n            installments = 2,  // N\u00famero de parcelas\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            creditType =  CreditTransactionType.STORE_INSTALMENTS // Cr\u00e9dito parcelado lojista\n        )\n\n        paykit.credit(creditParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/credito-parcelado/#credittransactiontype","title":"<code>CreditTransactionType</code>","text":"<p>Para o <code>creditType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de Cr\u00e9dito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de Cr\u00e9dito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - CREDITO_AVISTA | TRANSACAO_CREDITO_VISTA -&gt; AT_SIGHT\n * - CREDITO_PARCELADO_LOJA | TRANSACAO_CREDITO_PARCELADO_LOJISTA -&gt; STORE_INSTALMENTS\n * - CREDITO_PARCELADO_ADM -&gt; ADMIN_INSTALMENTS\n * - CREDITO_PARCELADO_BNCO -&gt; BANK_INSTALMENTS\n * - PRE_AUTORIZACAO -&gt; PRE_AUTHORIZATION\n * - CREDITO_CREDIARIO_CREDITO -&gt; CREDIT_FINANCING\n * - TRANSACAO_CREDITO_VISTA -&gt; CREDIT_TRANSACTION_AT_SIGHT\n * - TRANSACAO_CREDITO_PARCELADO_EMISSOR -&gt; ISSUER_INSTALMENTS\n * - TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO -&gt; CREDIT_1_MINUTE\n */\nenum class CreditTransactionType(\n    override val hasInterest: Boolean,\n    override val hasInstalments: Boolean\n) : TransactionType {\n    AT_SIGHT(false, false),                 // CREDITO_AVISTA\n    STORE_INSTALMENTS(false, true),         // CREDITO_PARCELADO_LOJA\n    ADMIN_INSTALMENTS(true, true),          // CREDITO_PARCELADO_ADM\n    BANK_INSTALMENTS(true, true),           // CREDITO_PARCELADO_BNCO\n    PRE_AUTHORIZATION(false, false),        // PRE_AUTORIZACAO\n    FINANCING(true, false),                 // CREDITO_CREDIARIO_CREDITO\n    ISSUER_INSTALMENTS(true, true),         // TRANSACAO_CREDITO_PARCELADO_EMISSOR\n    CREDIT_1_MINUTE(false, false);          // TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO\n}\n</code></pre>"},{"location":"transactions/credito-parcelado/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/credito-parcelado/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/credito-parcelado/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/credito/","title":"Cr\u00e9dito","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada. </p> <p>Para realizar uma Transa\u00e7\u00e3o de Cr\u00e9dito, utilize o m\u00e9todo credit da classe paykit.</p> <p>Os par\u00e2metros de entrada da transa\u00e7\u00e3o s\u00e3o configurados no objeto CreditParameters</p>"},{"location":"transactions/credito/#creditparameters","title":"<code>CreditParameters</code>","text":"<p>O objeto <code>CreditParameters</code>, utilizado em transa\u00e7\u00f5es de cr\u00e9dito.</p> Campo Tipo Descri\u00e7\u00e3o amount <code>BigDecimal</code> O valor total da transa\u00e7\u00e3o. installments <code>Int?</code> O n\u00famero de parcelas para pagamento. cpf <code>String?</code> CPF do cliente, se aplic\u00e1vel. Este campo \u00e9 opcional. billOfSale <code>String?</code> Documento de venda associado \u00e0 transa\u00e7\u00e3o. Este campo \u00e9 opcional. dateTimeOfSale <code>Date?</code> Data e hora em que a venda foi realizada. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. items <code>List&lt;OrderItem&gt;?</code> Lista dos items de venda, relacionados a transa\u00e7\u00e3o a ser realizada. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. deadline <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. postCreditDays <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. creditType <code>CreditTransactionType?</code> Tipo de transa\u00e7\u00e3o de cr\u00e9dito. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF <p>Existem diversas modalidades de cr\u00e9dito, sendo as mais conhecidas, a vista, parcelada pelo lojista e parcelada pelo estabelecimento. A tabela a seguir mostra todas as op\u00e7\u00f5es dispon\u00edveis.</p>"},{"location":"transactions/credito/#credittransactiontype","title":"<code>CreditTransactionType</code>","text":"<p>Para o <code>creditType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de Cr\u00e9dito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de Cr\u00e9dito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - CREDITO_AVISTA | TRANSACAO_CREDITO_VISTA -&gt; AT_SIGHT\n * - CREDITO_PARCELADO_LOJA | TRANSACAO_CREDITO_PARCELADO_LOJISTA -&gt; STORE_INSTALMENTS\n * - CREDITO_PARCELADO_ADM -&gt; ADMIN_INSTALMENTS\n * - CREDITO_PARCELADO_BNCO -&gt; BANK_INSTALMENTS\n * - PRE_AUTORIZACAO -&gt; PRE_AUTHORIZATION\n * - CREDITO_CREDIARIO_CREDITO -&gt; CREDIT_FINANCING\n * - TRANSACAO_CREDITO_VISTA -&gt; CREDIT_TRANSACTION_AT_SIGHT\n * - TRANSACAO_CREDITO_PARCELADO_EMISSOR -&gt; ISSUER_INSTALMENTS\n * - TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO -&gt; CREDIT_1_MINUTE\n */\nenum class CreditTransactionType(\n    override val hasInterest: Boolean,\n    override val hasInstalments: Boolean\n) : TransactionType {\n    AT_SIGHT(false, false),                 // CREDITO_AVISTA\n    STORE_INSTALMENTS(false, true),         // CREDITO_PARCELADO_LOJA\n    ADMIN_INSTALMENTS(true, true),          // CREDITO_PARCELADO_ADM\n    BANK_INSTALMENTS(true, true),           // CREDITO_PARCELADO_BNCO\n    PRE_AUTHORIZATION(false, false),        // PRE_AUTORIZACAO\n    FINANCING(true, false),                 // CREDITO_CREDIARIO_CREDITO\n    ISSUER_INSTALMENTS(true, true),         // TRANSACAO_CREDITO_PARCELADO_EMISSOR\n    CREDIT_1_MINUTE(false, false);          // TRANSACAO_BANRICOMPRAS_CREDITO_1_MINUTO\n}\n</code></pre> <p>Independente da modalidade, os resultados da transa\u00e7\u00e3o ser\u00e3o devolvidos no objeto paymentResult</p>"},{"location":"transactions/credito/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/credito/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/credito/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/credito/#exemplos","title":"Exemplos","text":""},{"location":"transactions/credito/#exemplo-de-credito-a-vista","title":"Exemplo de Cr\u00e9dito a vista","text":"<p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios:  - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.common.parameter.type.CreditTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Credito \u00e0 Vista\", PaykitId(\"PAYKIT_ID\")))\n\n        val creditParameter = CreditParameters(\n            installments = 1,  // N\u00famero de parcelas (1 para cr\u00e9dito \u00e0 vista)\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            creditType =  CreditTransactionType.AT_SIGHT // Cr\u00e9dito \u00e0 vista\n        )\n\n        paykit.credit(creditParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(id: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/credito/#exemplo-de-credito-parcelado-pelo-lojista","title":"Exemplo de Cr\u00e9dito parcelado pelo lojista","text":"<p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios: - installments: MAIOR que 1 - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.common.parameter.type.CreditTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Credito parcelado\", PaykitId(\"PAYKIT_ID\")))\n\n        val creditParameter = CreditParameters(\n            installments = 2,  // N\u00famero de parcelas\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            creditType =  CreditTransactionType.STORE_INSTALMENTS // Cr\u00e9dito parcelado lojista\n        )\n\n        paykit.credit(creditParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/debito/","title":"D\u00e9bito","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de D\u00e9bito, utilize o m\u00e9todo debit da classe paykit.</p> <p>Os par\u00e2metros de entrada da transa\u00e7\u00e3o s\u00e3o configurados no objeto DebitParameters</p>"},{"location":"transactions/debito/#debitparameters","title":"<code>DebitParameters</code>","text":"<p>O objeto <code>DebitParameters</code>, utilizado em transa\u00e7\u00f5es de d\u00e9bito.</p> Campo Tipo Descri\u00e7\u00e3o amount <code>BigDecimal</code> O valor total da transa\u00e7\u00e3o. installments <code>Int?</code> O n\u00famero de parcelas para pagamento. Este campo \u00e9 opcional. cpf <code>String?</code> CPF do cliente, se aplic\u00e1vel. Este campo \u00e9 opcional. billOfSale <code>String?</code> Documento de venda associado \u00e0 transa\u00e7\u00e3o. Este campo \u00e9 opcional. dateTimeOfSale <code>Date?</code> Data e hora em que a venda foi realizada. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. items <code>List&lt;OrderItem&gt;?</code> Lista dos items de venda, relacionados a transa\u00e7\u00e3o a ser realizada. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. deadline <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. postCreditDays <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. debitType <code>DebitTransactionType?</code> Tipo de transa\u00e7\u00e3o de d\u00e9bito. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. <p>Normalmente utilizamos a modalidade de d\u00e9bito a vista (AT_SIGHT). Mas a adquirente Vero aceita transa\u00e7oes pr\u00e9-datadas (POSTDATED) e parceladas (WITH_INSTALMENTS) tamb\u00e9m.</p> <p>A tabela a seguir mostra todas as op\u00e7\u00f5es dispon\u00edveis.</p>"},{"location":"transactions/debito/#debittransactiontype","title":"<code>DebitTransactionType</code>","text":"<p>Para o <code>debitType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de D\u00e9bito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de D\u00e9bito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - DEBITO_AVISTA | TRANSACAO_DEBITO_VISTA -&gt; AT_SIGHT\n * - DEBITO_PAGTO_FATURA_DEBITO -&gt; DEBIT_INVOICE_PAYMENT\n * - TRANSACAO_BANRICOMPRAS_VISTA -&gt; ACQUIRER_AT_SIGHT\n * - TRANSACAO_BANRICOMPRAS_PREDATADO -&gt; POSTDATED\n * - TRANSACAO_BANRICOMPRAS_PARCELADO -&gt; WITH_INSTALMENTS\n */\nenum class DebitTransactionType(\n    override val hasInterest: Boolean = false,\n    override val hasInstalments: Boolean = false\n) : TransactionType {\n    AT_SIGHT,                  // DEBITO_AVISTA\n    ACQUIRER_AT_SIGHT,         // TRANSACAO_BANRICOMPRAS_VISTA\n    INVOICE_PAYMENT,           // DEBITO_PAGTO_FATURA_DEBITO\n    POSTDATED,                 // TRANSACAO_BANRICOMPRAS_PREDATADO\n    WITH_INSTALMENTS(hasInstalments = true) // TRANSACAO_BANRICOMPRAS_PARCELADO\n}\n</code></pre> <p>Independente da modalidade, os resultados da transa\u00e7\u00e3o ser\u00e3o devolvidos no objeto paymentResult</p>"},{"location":"transactions/debito/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/debito/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/debito/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/debito/#exemplos","title":"Exemplos","text":"<p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios:  - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.common.parameter.type.DebitTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"D\u00e9bito\", PaykitId(\"PAYKIT_ID\")))\n\n        val debitParameter = DebitParameters(\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            debitType = DebitTransactionType.AT_SIGHT // D\u00e9bito \u00e0 vista\n        )\n\n        paykit.debit(debitParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre> <p>O <code>debitParameter</code> pode mudar de acordo com a o <code>debitType</code>, onde dado o suporte pela adquirente \u00e0 modalidade, exemplo do <code>DebitTransactionType.POSTDATED</code> para o pr\u00e9-datado.</p> <pre><code>    val debitParameter = PaymentParameters(\n        amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n        debitType = DebitTransactionType.POSTDATED // D\u00e9bito pr\u00e9-datado\n        postCreditDays = 30 // Dias para o pr\u00e9-datado\n    )\n</code></pre>"},{"location":"transactions/debito/#debittransactiontype_1","title":"<code>DebitTransactionType</code>","text":"<p>Para o <code>debitType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de D\u00e9bito.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de D\u00e9bito.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - DEBITO_AVISTA | TRANSACAO_DEBITO_VISTA -&gt; AT_SIGHT\n * - DEBITO_PAGTO_FATURA_DEBITO -&gt; DEBIT_INVOICE_PAYMENT\n * - TRANSACAO_BANRICOMPRAS_VISTA -&gt; ACQUIRER_AT_SIGHT\n * - TRANSACAO_BANRICOMPRAS_PREDATADO -&gt; POSTDATED\n * - TRANSACAO_BANRICOMPRAS_PARCELADO -&gt; WITH_INSTALMENTS\n */\nenum class DebitTransactionType(\n    override val hasInterest: Boolean = false,\n    override val hasInstalments: Boolean = false\n) : TransactionType {\n    AT_SIGHT,                  // DEBITO_AVISTA\n    ACQUIRER_AT_SIGHT,         // TRANSACAO_BANRICOMPRAS_VISTA\n    INVOICE_PAYMENT,           // DEBITO_PAGTO_FATURA_DEBITO\n    POSTDATED,                 // TRANSACAO_BANRICOMPRAS_PREDATADO\n    WITH_INSTALMENTS(hasInstalments = true) // TRANSACAO_BANRICOMPRAS_PARCELADO\n}\n</code></pre>"},{"location":"transactions/debito/#paymentresult_1","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/debito/#nsuinfo_1","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/debito/#transactioninfo_1","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/frota/","title":"Frota","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Frota, utilize o exemplo abaixo. </p> <p>Aten\u00e7\u00e3o</p> <p>Verifique os par\u00e2metros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios: - amount: MAIOR ou igual a 0.01</p>"},{"location":"transactions/frota/#fluxo-unificado-de-frotas-tefs","title":"Fluxo Unificado de Frotas (TEFs)","text":"<pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.FleetParameters\nimport com.linx.paykit.common.builder.TefFleetUnifiedBuilder\nimport com.linx.paykit.common.builder.models.RefuelItem\nimport com.linx.paykit.common.builder.models.ServiceItem\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\n\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Frota\", PaykitId(\"PAYKIT_ID\")))\n\n        val unifiedFleetRequest = TefFleetUnifiedBuilder()\n            .setAcquirerCode(121)\n            .setCpf(\"12345678901\")\n            .setVehiclePlate(\"ABC1234\")\n            .setDriverId(\"12345678901\")\n            .setOdometer(1000)\n            .setHourMeter(1000)\n            .setMileage(1000)\n            .setWorkOrderNumber(\"12345678901\")\n            .setEmployeeId(\"12345678901\")\n            .setHasBrPremmia(false)\n            .setBrPremmiaEmployeeCode(\"12345678901\")\n            .addServiceItem(\n                ServiceItem(\n                    1231, 123.45.toBigDecimal(), 123.45.toBigDecimal()\n                )\n            )\n            .setServiceItems(\n                listOf(\n                    ServiceItem(\n                        1231, 123.45.toBigDecimal(), 123.45.toBigDecimal()\n                    ),\n                    ServiceItem(\n                        1232, 123.45.toBigDecimal(), 123.45.toBigDecimal()\n                    )\n                )\n            )\n            .addRefuelItem(\n                RefuelItem(\n                    123, 123.45.toBigDecimal(), 123.45.toBigDecimal()\n                )\n            )\n            .setRefuelItems(\n                listOf(\n                    RefuelItem(\n                        123, 123.45.toBigDecimal(), 123.45.toBigDecimal()\n                    ),\n                    RefuelItem(\n                        125, 123.45.toBigDecimal(), 123.45.toBigDecimal()\n                    )\n                )\n            )\n            .setParameter(\n                \"brand\", ParameterValue.Str(\"Rovias S/A\")\n            )\n            .setParameter(\n                \"responsaveis\", ParameterValue.ListVal(\n                    listOf(\n                        ParameterValue.Str(\"Jo\u00e3o\"),\n                        ParameterValue.Str(\"Cleber\")\n                    )\n                )\n            )\n            .build()\n\n\n        val fleetParameters = FleetParameters(\n            providerParams = unifiedFleetRequest // JSONObject com as informa\u00e7\u00f5es da transa\u00e7\u00e3o\n        )\n\n        paykit.fleet(fleetParameters, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/frota/#demais-rotinas-de-frotas","title":"Demais Rotinas de Frotas","text":"<pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.FleetParameters\nimport com.linx.paykit.common.builder.models.RefuelItem\nimport com.linx.paykit.common.builder.models.ServiceItem\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\n\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Frota\", PaykitId(\"PAYKIT_ID\")))\n\n        val fleetParameters = FleetParameters(\n            amount = BigDecimal(\"100.00\"),      // Valor da transa\u00e7\u00e3o\n            vehiclePlate = \"ABC1234\",           // Placa do Ve\u00edculo\n            driverId = \"234123\",                // Matr\u00edcula ou C\u00f3digo do Motorista\n            odometer = 1000,                    // Contador da quilometragem percorrida pelo ve\u00edculo\n            hourMeter = 1000,                   // Representa a quantidade de tempo de funcionamento do ve\u00edculo\n            providerParams = JSONObject(..)     // JSON para par\u00e2metros extras, utilize um JSONObjectBuilder.\n        )\n\n        paykit.fleet(fleetParameters, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/frota/#jsonobjectbuilders","title":"JSONObjectBuilders","text":"<p>Aten\u00e7\u00e3o</p> <p>Verifique os par\u00e2metros do JSON, a t\u00edtulo de consulta, na documenta\u00e7\u00e3o do provedor/adquirente. Exemplo de JSON no TEF Mobile</p>"},{"location":"transactions/frota/#teffleetunifiedbuilder","title":"<code>TefFleetUnifiedBuilder</code>","text":"<p>Builder especializado para opera\u00e7\u00f5es de frota unificadas para TEF.</p> <p>Oferece suporte para configura\u00e7\u00f5es mais complexas, permitindo montar o JSONObject de forma mais segura:  </p>"},{"location":"transactions/frota/#configuracoes-basicas","title":"Configura\u00e7\u00f5es B\u00e1sicas:","text":"<pre><code>val builder = TefFleetUnifiedBuilder()\n    .setAcquirerCode(121)              // C\u00f3digo da adquirente (obrigat\u00f3rio)\n    .setOperationType(1)               // Tipo de opera\u00e7\u00e3o\n    .setWorkOrderNumber(\"OS123\")       // N\u00famero da OS\n</code></pre>"},{"location":"transactions/frota/#dados-do-veiculo-e-motorista","title":"Dados do Ve\u00edculo e Motorista:","text":"<pre><code>builder\n    .setVehiclePlate(\"ABC1234\")       // Placa\n    .setDriverId(\"123456\")            // ID do motorista\n    .setCpf(\"12345678900\")            // CPF\n</code></pre>"},{"location":"transactions/frota/#metricas-do-veiculo","title":"M\u00e9tricas do Ve\u00edculo:","text":"<pre><code>builder\n    .setOdometer(50000)               // Hod\u00f4metro\n    .setHourMeter(1000)               // Hor\u00edmetro\n    .setMileage(5000)                 // Quilometragem\n</code></pre>"},{"location":"transactions/frota/#configuracoes-br-premmia","title":"Configura\u00e7\u00f5es BR Premmia:","text":"<pre><code>builder\n    .setHasBrPremmia(true)\n    .setBrPremmiaEmployeeCode(\"BP123\")\n</code></pre>"},{"location":"transactions/frota/#detalhes-da-operacao","title":"Detalhes da Opera\u00e7\u00e3o:","text":"<pre><code>// Adicionar Servi\u00e7o\nbuilder.addServiceItem(\n    ServiceItem(\n        code = \"SERV1\",\n        quantity = 2.0,\n        unitPrice = 50.0.toBigDecimal()\n    )\n)\n\n// Adicionar Abastecimento\nbuilder.addRefuelItem(\n    RefuelItem(\n        code = \"COMB1\",\n        quantity = 30.0,\n        unitPrice = 5.0.toBigDecimal()\n    )\n)\n</code></pre>"},{"location":"transactions/frota/#parametros-customizados","title":"Par\u00e2metros Customizados:","text":"<pre><code>builder.setParameter(\"chave\", ParameterValue.Str(\"valor\"))\n</code></pre>"},{"location":"transactions/frota/#finalizacao","title":"Finaliza\u00e7\u00e3o","text":"<pre><code>val jsonObject = builder.build()    // Gera o objeto JSON final\n</code></pre>"},{"location":"transactions/frota/#observacoes-importantes","title":"Observa\u00e7\u00f5es Importantes:","text":"<ul> <li>O c\u00f3digo da adquirente (<code>acquirerCode</code>) \u00e9 obrigat\u00f3rio</li> <li>Os detalhes da opera\u00e7\u00e3o (servi\u00e7os e abastecimentos) s\u00e3o inicializados automaticamente</li> <li>Suporta m\u00faltiplos servi\u00e7os e abastecimentos na mesma opera\u00e7\u00e3o</li> <li>Ideal para opera\u00e7\u00f5es complexas de frota com m\u00faltiplos itens</li> </ul>"},{"location":"transactions/frota/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/frota/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/frota/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/impressao/","title":"Impress\u00e3o","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Impress\u00e3o, utilize o exemplo abaixo.</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.parameter.ReceiptType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Impress\u00e3o\", PaykitId(\"PAYKIT_ID\")))\n\n        val bitmap: Bitmap // Bitmap para impress\u00e3o\n\n        paykit.print(bitmap, object : Callback&lt;PrintResult&gt; {\n            override fun execute(result: PrintResult) {\n                Log.i(\"PaymentResult\", \"Status: ${result}\")\n                onPaymentResult(result)\n            }\n        })\n    }\n\n    private fun onPaymentResult(result: PrintResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da revers\u00e3o\n    }\n}\n</code></pre>"},{"location":"transactions/impressao/#detalhamento-do-printresult","title":"Detalhamento do <code>PrintResult</code>","text":"<p>O objeto <code>PrintResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais sobre o status da impress\u00e3o. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> dateTime <code>Date</code> Data e hora da impress\u00e3o. status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>NORMALLY</code>: Impressora funcionando normalmente. - <code>WITHOUT_PAPER</code>: Impressora sem papel. - <code>VOLTAGE_TO_LOW</code>: Voltagem muito baixa. - <code>NO_PRINTER_DETECTED</code>: Nenhuma impressora detectada. - <code>OVERHEATED</code>: Impressora superaquecida. - <code>CUT_JAM_ERROR</code>: Erro de atolamento no cortador. - <code>PREPARING_PRINTER</code>: Preparando impressora. - <code>PRINTING_UNFINISHED</code>: A \u00faltima impress\u00e3o n\u00e3o foi conclu\u00edda. - <code>ABNORMAL_COMMUNICATION</code>: Comunica\u00e7\u00e3o anormal com a impressora. - <code>NO_PRINTER_BLACK_MARK</code>: Marca preta n\u00e3o detectada. - <code>CUTTER_RECOVERED</code>: Cortador recuperado. - <code>OPEN_THE_LID</code>: Abra a tampa. - <code>ERROR_DATA_PACKAGE_TOO_LONG</code>: Pacote de dados muito longo. - <code>FONT_ERROR</code>: Biblioteca de fontes n\u00e3o instalada. - <code>FORMAT_PRINT_ERROR</code>: Erro no formato do pacote de impress\u00e3o. - <code>BUSY_PRINTER</code>: Impressora ocupada. - <code>GENERIC_ERROR</code>: Algo est\u00e1 errado com o m\u00f3dulo. - <code>SERVICE_UNAVAILABLE</code>: Servi\u00e7o indispon\u00edvel. - <code>METHOD_UNAVAILABLE</code>: M\u00e9todo indispon\u00edvel. - <code>INVALID_PARAMETER</code>: Par\u00e2metro inv\u00e1lido. - <code>UNAVAILABLE_PARAMETER</code>: Par\u00e2metro indispon\u00edvel. - <code>NO_PERMISSION</code>: Sem permiss\u00e3o para a opera\u00e7\u00e3o. - <code>DEPRECATED</code>: M\u00e9todo/par\u00e2metro obsoleto. - <code>SUCCESS</code>: Tarefa conclu\u00edda com sucesso. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. success <code>Boolean</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/localizar-transacao/","title":"Localizar transa\u00e7\u00e3o","text":"<p>O processo de busca de transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para Localizar uma Transa\u00e7\u00e3o, utilize o exemplo abaixo.</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.TransactionQueryResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.TransactionInfoParameters\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Busca Transa\u00e7\u00e3o\", PaykitId(\"PAYKIT_ID\")))\n\n        // Utilizar o ID da transa\u00e7\u00e3o ou o ID externo para localizar \n        val transactionParameter = TransactionInfoParameters(\n            transactionId = \"1\", // (transactionId) NSU da Transa\u00e7\u00e3o\n            // externalId = \"123456\" // ID externo da transa\u00e7\u00e3o \n        )\n\n        paykit.getTransaction(transactionParameter, object : Callback&lt;TransactionQueryResult?&gt; {\n            override fun execute(result: TransactionQueryResult?) {\n                Log.i(\"TransactionQueryResult\", \"Transaction: ${result}\")\n                onGetTransaction(result)\n            }\n        })\n    }\n\n    private fun onGetTransaction(transaction: TransactionQueryResult?) {\n        // Implementar a l\u00f3gica para lidar com o resultado da consulta\n    }\n}\n</code></pre>"},{"location":"transactions/localizar-transacao/#detalhamento-do-transactionqueryresult","title":"Detalhamento do <code>TransactionQueryResult</code>","text":"<p>O objeto <code>TransactionQueryResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es da consulta. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo da transa\u00e7\u00e3o (Informado pela automa\u00e7\u00e3o comercial). processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/localizar-transacao/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/localizar-transacao/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/pix/","title":"Pix","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de PIX, utilize o exemplo abaixo. </p> <p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios: - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"PIX\", PaykitId(\"PAYKIT_ID\")))\n\n        val pixParameter = PaymentParameters(\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n        )\n\n        paykit.pix(pixParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/pix/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/pix/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/pix/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/pre-autorizacao/","title":"Cr\u00e9dito - Pr\u00e9-autoriza\u00e7\u00e3o","text":"<p>Para realizar uma Transa\u00e7\u00e3o de Pr\u00e9-autoriza\u00e7\u00e3o de cr\u00e9dito, utilize os m\u00e9todos preAuthorize, capturePreAuthorization (ou credit) e cancelPreAuthorization (ou cancel) da classe paykit.</p> <p>Os par\u00e2metros de entrada da transa\u00e7\u00e3o de pr\u00e9-autoriza\u00e7\u00e3o s\u00e3o configurados no objeto CreditParameters</p>"},{"location":"transactions/pre-autorizacao/#creditparameters","title":"<code>CreditParameters</code>","text":"<p>O objeto <code>CreditParameters</code>, utilizado em transa\u00e7\u00f5es de cr\u00e9dito.</p> Campo Tipo Descri\u00e7\u00e3o amount <code>BigDecimal</code> O valor total da transa\u00e7\u00e3o. installments <code>Int?</code> O n\u00famero de parcelas para pagamento. cpf <code>String?</code> CPF do cliente, se aplic\u00e1vel. Este campo \u00e9 opcional. billOfSale <code>String?</code> Documento de venda associado \u00e0 transa\u00e7\u00e3o. Este campo \u00e9 opcional. dateTimeOfSale <code>Date?</code> Data e hora em que a venda foi realizada. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. items <code>List&lt;OrderItem&gt;?</code> Lista dos items de venda, relacionados a transa\u00e7\u00e3o a ser realizada. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. deadline <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. postCreditDays <code>Int?</code> Data de expira\u00e7\u00e3o da primeira parcela, em dias. Este campo \u00e9 opcional. creditType <code>CreditTransactionType?</code> Tipo de transa\u00e7\u00e3o de cr\u00e9dito. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF <p>J\u00e1 os par\u00e2metros de entrada da transa\u00e7\u00e3o de captura ou cancelamento de pr\u00e9-autoriza\u00e7\u00e3o s\u00e3o configurados no objeto PendingPreParameters</p>"},{"location":"transactions/pre-autorizacao/#pendingpreparameters","title":"<code>PendingPreParameters</code>","text":"<p>O objeto <code>PendingPreParameters</code>, utilizado em transa\u00e7\u00f5es de captura ou cancelamento de pr\u00e9-autoriza\u00e7\u00e3o.</p> Campo Tipo Descri\u00e7\u00e3o preId <code>String</code> Identificador da transa\u00e7\u00e3o que ser\u00e1 capturada ou cancelada. amount <code>BigDecimal?</code> O valor que ser\u00e1 capturado na transa\u00e7\u00e3o. Este campo \u00e9 opcional. externalId <code>String?</code> Identificador externo para a transa\u00e7\u00e3o, se necess\u00e1rio. Este campo \u00e9 opcional. autoPrintReceipt <code>Boolean</code> Imprime automaticamente o comprovante do lojista quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. printMerchantReceipt <code>Boolean</code> Imprime (ou n\u00e3o) o recibo do lojista. Utilizar apenas em totens de auto atendimento. autoConfirm <code>Boolean?</code> Envia a confirma\u00e7\u00e3o automaticamente. S\u00f3 utilizada quando o processador da transa\u00e7\u00e3o \u00e9 o TEF. <p>Perceba que os par\u00e2metros s\u00e3o os mesmos de uma transa\u00e7\u00e3o normal de cr\u00e9dito, afinal, s\u00f3 existe pr\u00e9-autoriza\u00e7\u00e3o para a modalidade cr\u00e9dito. Entretanto, o preenchimento ou n\u00e3o de alguns par\u00e2metros se d\u00e1 pela <code>Adquirente</code>, pois em algumas a pr\u00e9-autoriza\u00e7\u00e3o \u00e9 uma transa\u00e7\u00e3o completa e, posteriormente precisamos apenas efetuar a captura (ou confirma\u00e7\u00e3o) dessa pr\u00e9-autoriza\u00e7\u00e3o. J\u00e1 em outras adquirentes, a captura do valor ocorre em uma transa\u00e7\u00e3o de cr\u00e9dito normal (m\u00e9todo credit); nesses casos o importante na pr\u00e9-autoriza\u00e7\u00e3o \u00e9 apenas o valor que ser\u00e1 reservado. Com rela\u00e7\u00e3o ao cancelamento possumios um comportamento semelhante.</p> <p>A tabela abaixo especifica quais m\u00e9todos devem ser chamados nas principais adquirentes para efetuar a captura do valor ou o cancelamento da pr\u00e9-autoriza\u00e7\u00e3o:</p> Provedor* Adquirente* M\u00e9todo de captura* M\u00e9todo de cancelamento* TEF Stone TEF Rede <code>capturePreAuthorization</code> <code>cancel</code> TEF PagSeguro TEF GetNet <code>credit</code> <code>cancel</code> TEF Cielo <code>credit</code> <code>cancel</code> TEF Adyen TEF Vero TEF Sicoob TEF Sicredi <p>*Matriz em constru\u00e7\u00e3o</p> <p>Os resultados da transa\u00e7\u00e3o de pr\u00e9-autoriza\u00e7\u00e3o ou captura de pr\u00e9-autoria\u00e7\u00e3o ser\u00e3o devolvidos no objeto PaymentResult.</p>"},{"location":"transactions/pre-autorizacao/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/pre-autorizacao/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/pre-autorizacao/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente. <p>Por outro lado, o resultado da transa\u00e7\u00e3o de cancelamento de pr\u00e9-autoriza\u00e7\u00e3o ser\u00e3o devolvidos no objeto CancelResult.</p>"},{"location":"transactions/pre-autorizacao/#detalhamento-do-cancelresult","title":"Detalhamento do <code>CancelResult</code>","text":"<p>O objeto <code>CancelResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o original. originalId <code>String</code> Identificador da transa\u00e7\u00e3o original. cancelledAmount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o de cancelamento. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/pre-autorizacao/#nsuinfo_1","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/pre-autorizacao/#transactioninfo_1","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/pre-autorizacao/#exemplos","title":"Exemplos","text":""},{"location":"transactions/pre-autorizacao/#exemplo-de-pre-autorizacao-com-captura-da-pre-autorizacao","title":"Exemplo de Pr\u00e9-autoriza\u00e7\u00e3o com captura da pr\u00e9-autoriza\u00e7\u00e3o","text":"<p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios:  - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.TransactionStatus\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.CreditParameters\nimport com.linx.paykit.common.parameter.PendingPreParameters\nimport com.linx.paykit.common.parameter.type.CreditTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Pr\u00e9-autoriza\u00e7\u00e3o com captura da pr\u00e9-autoriza\u00e7\u00e3o\", PaykitId(\"PAYKIT_ID\")))\n\n        val preParameter = CreditParameters(\n            installments = 1,  // N\u00famero de parcelas (1 para cr\u00e9dito \u00e0 vista)\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            creditType =  CreditTransactionType.AT_SIGHT // Cr\u00e9dito \u00e0 vista\n        )\n\n        paykit.preAuthorize(preParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPreResult(result.id, result)\n            }\n        })\n    }\n\n    private fun onPreResult(id: String?, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da pr\u00e9-autoriza\u00e7\u00e3o\n\n        // ...\n\n        // Implementada l\u00f3gica de captura aqui apenas para fins educativos\n        if (transaction.status == TransactionStatus.APPROVED) {\n            val pendingParameter = PendingPreParameters(\n                preId = transaction.id,\n                amount = BigDecimal(\"100.00\")  // Valor que ser\u00e1 capturado\n            )\n\n            paykit.capturePre(pendingParameter, object : Callback&lt;PaymentResult&gt; {\n                override fun execute(result: PaymentResult) {\n                    Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                    onCaptureResult(result.id, result.rawData)\n                }\n            })\n        }\n    }\n\n    private fun onCaptureResult(id: String?, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da captura da pr\u00e9-autoriza\u00e7\u00e3o\n    }\n}\n</code></pre>"},{"location":"transactions/pre-autorizacao/#exemplo-de-pre-autorizacao-com-operacao-de-credito-para-captura","title":"Exemplo de Pr\u00e9-autoriza\u00e7\u00e3o com opera\u00e7\u00e3o de cr\u00e9dito para captura","text":"<p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios: - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.TransactionStatus\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.CreditParameters\nimport com.linx.paykit.common.parameter.PendingPreParameters\nimport com.linx.paykit.common.parameter.type.CreditTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Pr\u00e9-autoriza\u00e7\u00e3o com captura da pr\u00e9-autoriza\u00e7\u00e3o\", PaykitId(\"PAYKIT_ID\")))\n\n        val preParameter = CreditParameters(\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n        )\n\n        paykit.preAuthorize(preParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPreResult(result.id, result)\n            }\n        })\n    }\n\n    private fun onPreResult(id: String?, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da pr\u00e9-autoriza\u00e7\u00e3o\n\n        // ...\n\n        // Implementada l\u00f3gica de captura aqui apenas para fins educativos\n        if (transaction.status == TransactionStatus.APPROVED) {\n            val creditParameter = CreditParameters(\n                installments = 1,  // N\u00famero de parcelas (1 para cr\u00e9dito \u00e0 vista)\n                amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n                creditType =  CreditTransactionType.AT_SIGHT // Cr\u00e9dito \u00e0 vista\n            )\n\n            paykit.credit(creditParameter, object : Callback&lt;PaymentResult&gt; {\n                override fun execute(result: PaymentResult) {\n                    Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                    onCaptureResult(result.id, result.rawData)\n                }\n            })\n        }\n    }\n\n    private fun onCaptureResult(id: String?, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da captura da pr\u00e9-autoriza\u00e7\u00e3o\n    }\n}\n</code></pre>"},{"location":"transactions/reimpressao/","title":"Reimpress\u00e3o","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Reimpress\u00e3o, utilize o exemplo abaixo.</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.common.parameter.ReceiptType\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Reimpress\u00e3o\", PaykitId(\"PAYKIT_ID\")))\n\n        val receiptType = ReceiptType.MERCHANT // Imprimir comprovante Estabelecimento\n\n        paykit.printLastReceipt(receiptType, object : Callback&lt;PrintResult&gt; {\n            override fun execute(result: PrintResult) {\n                Log.i(\"PaymentResult\", \"Status: ${result}\")\n                onPaymentResult(result)\n            }\n        })\n    }\n\n    private fun onPaymentResult(result: PrintResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado da revers\u00e3o\n    }\n}\n</code></pre>"},{"location":"transactions/reimpressao/#detalhamento-do-printresult","title":"Detalhamento do <code>PrintResult</code>","text":"<p>O objeto <code>PrintResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais sobre o status da impress\u00e3o. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> dateTime <code>Date</code> Data e hora da impress\u00e3o. status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>NORMALLY</code>: Impressora funcionando normalmente. - <code>WITHOUT_PAPER</code>: Impressora sem papel. - <code>VOLTAGE_TO_LOW</code>: Voltagem muito baixa. - <code>NO_PRINTER_DETECTED</code>: Nenhuma impressora detectada. - <code>OVERHEATED</code>: Impressora superaquecida. - <code>CUT_JAM_ERROR</code>: Erro de atolamento no cortador. - <code>PREPARING_PRINTER</code>: Preparando impressora. - <code>PRINTING_UNFINISHED</code>: A \u00faltima impress\u00e3o n\u00e3o foi conclu\u00edda. - <code>ABNORMAL_COMMUNICATION</code>: Comunica\u00e7\u00e3o anormal com a impressora. - <code>NO_PRINTER_BLACK_MARK</code>: Marca preta n\u00e3o detectada. - <code>CUTTER_RECOVERED</code>: Cortador recuperado. - <code>OPEN_THE_LID</code>: Abra a tampa. - <code>ERROR_DATA_PACKAGE_TOO_LONG</code>: Pacote de dados muito longo. - <code>FONT_ERROR</code>: Biblioteca de fontes n\u00e3o instalada. - <code>FORMAT_PRINT_ERROR</code>: Erro no formato do pacote de impress\u00e3o. - <code>BUSY_PRINTER</code>: Impressora ocupada. - <code>GENERIC_ERROR</code>: Algo est\u00e1 errado com o m\u00f3dulo. - <code>SERVICE_UNAVAILABLE</code>: Servi\u00e7o indispon\u00edvel. - <code>METHOD_UNAVAILABLE</code>: M\u00e9todo indispon\u00edvel. - <code>INVALID_PARAMETER</code>: Par\u00e2metro inv\u00e1lido. - <code>UNAVAILABLE_PARAMETER</code>: Par\u00e2metro indispon\u00edvel. - <code>NO_PERMISSION</code>: Sem permiss\u00e3o para a opera\u00e7\u00e3o. - <code>DEPRECATED</code>: M\u00e9todo/par\u00e2metro obsoleto. - <code>SUCCESS</code>: Tarefa conclu\u00edda com sucesso. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. success <code>Boolean</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/voucher/","title":"Voucher","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Voucher, utilize o exemplo abaixo. </p> <p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios:  - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.common.parameter.type.VoucherTransactionType\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Voucher\", PaykitId(\"PAYKIT_ID\")))\n\n        val voucherParameter = VoucherParameters(\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n            voucherType = VoucherTransactionType.FOOD // Tipo de transa\u00e7\u00e3o de Voucher\n        )\n\n        paykit.voucher(voucherParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre> <p>Aten\u00e7\u00e3o</p> <p>Verifique a modalidade de voucher suportada pela adquirente.</p>"},{"location":"transactions/voucher/#vouchertransactiontype","title":"<code>VoucherTransactionType</code>","text":"<p>Para o <code>voucherType</code> \u00e9 utilizado um <code>enum</code> para identifica\u00e7\u00e3o da Modalidade de Voucher.</p> <pre><code>/**\n * Enum representando os tipos de transa\u00e7\u00e3o de Voucher.\n * Correspond\u00eancia DE-PARA (Portugu\u00eas -&gt; Ingl\u00eas):\n * - VOUCHER_ALIMENTACAO -&gt; FOOD\n * - VOUCHER_REFEICAO -&gt;    MEAL\n * - VOUCHER_AUTOMOTIVO -&gt;  AUTOMOTIVE\n * - VOUCHER_CULTURA -&gt;     CULTURE\n * - VOUCHER_PEDAGIO -&gt;     TOLL\n * - VOUCHER_BENEFICIOS -&gt;  BENEFITS\n * - VOUCHER_AUTO -&gt;        AUTOMOBILE\n * - VOUCHER_CONSULTA_SALDO -&gt; BALANCE_INQUIRY\n * - VOUCHER_VALE_PEDAGIO -&gt; TOLL_VALE\n * - TRANSACAO_VOUCHER -&gt; DEFAULT\n */\nenum class VoucherTransactionType(\n    override val hasInterest: Boolean = false,\n    override val hasInstalments: Boolean = false\n) : TransactionType {\n    FOOD,                     // VOUCHER_ALIMENTACAO\n    MEAL,                     // VOUCHER_REFEICAO\n    AUTOMOTIVE,               // VOUCHER_AUTOMOTIVO\n    CULTURE,                  // VOUCHER_CULTURA\n    TOLL,                     // VOUCHER_PEDAGIO\n    BENEFITS,                 // VOUCHER_BENEFICIOS\n    AUTOMOBILE,               // VOUCHER_AUTO\n    BALANCE_INQUIRY,          // VOUCHER_CONSULTA_SALDO\n    TOLL_VALE,                // VOUCHER_VALE_PEDAGIO\n}\n</code></pre>"},{"location":"transactions/voucher/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/voucher/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/voucher/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."},{"location":"transactions/wallet/","title":"Wallet","text":"<p>O processo para realizar qualquer transa\u00e7\u00e3o, tem como premissa que a ativa\u00e7\u00e3o do SDK foi previamente realizada.  Para realizar uma Transa\u00e7\u00e3o de Wallet, utilize o exemplo abaixo. </p> <p>Aten\u00e7\u00e3o</p> <p>Verifique os parametros da transa\u00e7\u00e3o. Os atributos devem seguir os crit\u00e9rios: - amount: MAIOR ou igual a 0.01</p> <pre><code>import android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.linx.paykit.common.Callback\nimport com.linx.paykit.common.PaymentResult\nimport com.linx.paykit.common.builder.Parameters\nimport com.linx.paykit.common.parameter.PaymentParameters\nimport com.linx.paykit.core.Paykit\nimport com.linx.paykit.core.PaykitFactory\nimport java.math.BigDecimal\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var paykit: Paykit\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        paykit = PaykitFactory().build(Parameters(this.applicationContext, \"Wallet\", PaykitId(\"PAYKIT_ID\")))\n\n        val walletParameter = PaymentParameters(\n            amount = BigDecimal(\"100.00\"),  // Valor da transa\u00e7\u00e3o\n        )\n\n        paykit.wallet(walletParameter, object : Callback&lt;PaymentResult&gt; {\n            override fun execute(result: PaymentResult) {\n                Log.i(\"PaymentResult\", \"ID: ${result.id}, Transaction: ${result.rawData}\")\n                onPaymentResult(result.id, result.rawData)\n            }\n        })\n    }\n\n    private fun onPaymentResult(transactionId: String, transaction: PaymentResult) {\n        // Implementar a l\u00f3gica para lidar com o resultado do pagamento\n    }\n}\n</code></pre>"},{"location":"transactions/wallet/#paymentresult","title":"<code>PaymentResult</code>","text":"<p>O objeto <code>PaymentResult</code>, retornado no callback da transa\u00e7\u00e3o, cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o id <code>String</code> Identificador \u00fanico da transa\u00e7\u00e3o. externalId <code>String</code> Identificador externo para a transa\u00e7\u00e3o. processor <code>Enum</code> Indica o processador da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>STONE</code> - <code>TEF</code> - <code>REDE</code> - <code>GETNET</code> - <code>PAGSEGURO</code> - <code>VERO</code> - <code>CIELO</code> - <code>SICOOB</code> - <code>SITEF</code> status <code>Enum</code> Representa o status da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>PENDING</code>: Aguardando processamento. - <code>APPROVED</code>: Transa\u00e7\u00e3o aprovada. - <code>CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>PARTIALLY_CANCELLED</code>: Transa\u00e7\u00e3o cancelada. - <code>ERROR</code>: Ocorreu um erro na transa\u00e7\u00e3o. - <code>DECLINED</code>: Transa\u00e7\u00e3o recusada. amount <code>BigDecimal</code> Representa o valor da transa\u00e7\u00e3o. message <code>String</code> Mensagem de sucesso ou erro, caso aplic\u00e1vel. paymentType <code>Enum</code> Representa o m\u00e9todo de pagamento da transa\u00e7\u00e3o. Valores poss\u00edveis: - <code>CREDIT</code> - <code>DEBIT</code> - <code>VOUCHER</code> - <code>PIX</code> - <code>WALLET</code> - <code>FLEET</code> - <code>QR_CODE</code> transactionType <code>Interface</code> Representa a interface que o enumerador do modalidade de cada m\u00e9todo possu\u00ed. Exemplo: Cr\u00e9dito Parcelado Lojista. Ver exemplos abaixo. (<code>CreditTransactionType</code>,<code>DebitTransactionType</code>,<code>VoucherTransactionType</code>) transactionInfo <code>TransactionInfo</code> Representa dados de retorno transacional da adquirente. nsuInfo <code>NsuInfo</code> Representa dados de NSU do retorno transacional da adquirente. dateTime <code>Date</code> Representa data e hora da transa\u00e7\u00e3o. rawData <code>Map&lt;String, String&gt;</code> Retorno estilo chave/valor recebido do provedor. OBS: Os dados desse campo mudam de acordo com o provedor e o tipo de transa\u00e7\u00e3o."},{"location":"transactions/wallet/#nsuinfo","title":"NsuInfo","text":"<p>O objeto <code>NsuInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da transa\u00e7\u00e3o que s\u00e3o preenchidos de acordo com o retorno do provedor. Abaixo est\u00e3o os campos dispon\u00edveis.</p> Campo Tipo Descri\u00e7\u00e3o nsu <code>String</code> C\u00f3digo da transa\u00e7\u00e3o de cart\u00e3o. Normalmente gerado apenas em transa\u00e7\u00f5es com cart\u00e3o, mas em algumas adquirentes tamb\u00e9m \u00e9 gerado em outras transa\u00e7\u00f5es. e2eId <code>String</code> C\u00f3digo da transa\u00e7\u00e3o PIX. Ele \u00e9 gerado apenas em transa\u00e7\u00f5es PIX. nsuAcquirer <code>String</code> C\u00f3digo da transa\u00e7\u00e3o da adquirente/rede. Normalmente TEF Houses entregam esse NSU gerado na rede autorizadora. nsuLocal <code>String</code> C\u00f3digo da transa\u00e7\u00e3o. Algumas adquirentes possuem um idetificador interno da transa\u00e7\u00e3o (diferente do NSU)."},{"location":"transactions/wallet/#transactioninfo","title":"TransactionInfo","text":"<p>O objeto <code>TransactionInfo</code> cont\u00e9m informa\u00e7\u00f5es essenciais da adquirente. Abaixo est\u00e3o os principais campos dispon\u00edveis:</p> Campo Tipo Descri\u00e7\u00e3o authorizationCode <code>String</code> C\u00f3digo de autoriza\u00e7\u00e3o da transa\u00e7\u00e3o. cardBrand <code>String</code> Bandeira do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardNumber <code>String</code> N\u00famero do cart\u00e3o, com mascara, utilizado na transa\u00e7\u00e3o. cardHolder <code>String</code> Propriet\u00e1rio do cart\u00e3o utilizado na transa\u00e7\u00e3o. cardLastDigits <code>String</code> \u00daltimos d\u00edgitos do cart\u00e3o utilizado na transa\u00e7\u00e3o. bankAccount <code>String</code> Identificador do banco utilizado na transa\u00e7\u00e3o. installments <code>String</code> N\u00famero de parcelas utilizadas na transa\u00e7\u00e3o. storeReceipt <code>String</code> Comprovante da Loja. customerReceipt <code>String</code> Comprovante do Cliente."}]}